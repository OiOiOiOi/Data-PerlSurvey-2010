"","running_perl_program_across_mult_platforms_easy","cross_platform_perl_programming_comments"
"1",6,"Quite often, cross platform programming works very well in Perl"
"2",3,"it can be done well or poorly, like any kind of programming."
"3",5,""
"4",5,""
"5",NA,""
"6",3,""
"7",NA,""
"8",4,""
"9",6,""
"10",4,"it is OK"
"11",1,""
"12",1,""
"13",1,""
"14",6,""
"15",NA,""
"16",1,""
"17",1,""
"18",NA,""
"19",4,""
"20",3,""
"21",5,"it's a hassle making sure every module is installed everywhere, besides that it's quite easy as long as things are developed properly (say without assuming / vs \ etc.)"
"22",NA,""
"23",NA,""
"24",NA,""
"25",NA,""
"26",1,""
"27",5,""
"28",NA,""
"29",1,""
"30",6,"I use mostly linux so I'm not expert in cross-platform"
"31",5,""
"32",3,"What happened to Parrot?"
"33",5,""
"34",6,""
"35",3,""
"36",6,""
"37",6,""
"38",7,"it's one of the best one I forgot to fill the former form in."
"39",1,""
"40",NA,""
"41",5,"Once the dependencies are sorted, it's usually fine."
"42",NA,""
"43",NA,""
"44",NA,""
"45",5,""
"46",NA,""
"47",NA,""
"48",NA,""
"49",NA,""
"50",5,""
"51",3,""
"52",6,""
"53",6,""
"54",4,""
"55",7,""
"56",5,""
"57",NA,""
"58",6,"I only force install if there is no other option. Also, I do go and look to see what has been reported. If the test fails due to a innocuous bug, like a testing only bug or one that doesn't affect us as we don't use that particular feature. Then I will install it."
"59",6,""
"60",6,""
"61",6,"Cross-platform problems only happen to people who were raised on Unix and never learned about non-unixish operating systems"
"62",5,""
"63",NA,""
"64",NA,""
"65",6,""
"66",7,""
"67",NA,""
"68",5,"Mac/Linux/Solaris works mostly. I don't know Windows."
"69",1,"Tried it once with wxPerl which was PITA to install, so I sticked to Linux"
"70",NA,""
"71",1,""
"72",4,"It's not easy, but it's not easier in other languages. It requires dedication and vigilance."
"73",6,"I've not been in a position to leverage OS specific features, so portability has generally been very good."
"74",5,""
"75",6,""
"76",NA,""
"77",1,""
"78",1,""
"79",1,""
"80",NA,""
"81",NA,""
"82",NA,""
"83",6,""
"84",6,""
"85",5,""
"86",NA,""
"87",4,""
"88",6,""
"89",5,""
"90",6,"cpanminus rocks."
"91",4,""
"92",5,""
"93",NA,""
"94",6,"Binaries are the devil's work.. well or not. At least they can be pretty hindering in the case of writing Perl scripts for Unix AND Windows at the same time. Version hell ;-)"
"95",2,"I have tried to install perl CPAN module on windows. It supposed to be simple."
"96",5,""
"97",3,"make für OSX is in the huge Xcode-tools package. It would be perfect to offer something linke strawberry for mac.[CR]It would be cool to have a simple standalone perl installation for any plattform. (o.k., I can use virtual machines to test ""local"" installs of scripts and modules.)"
"98",6,""
"99",7,"very good in cross platform for UNIX flavors"
"100",2,""
"101",NA,""
"102",NA,""
"103",NA,"no experience"
"104",NA,""
"105",2,""
"106",5,""
"107",1,""
"108",6,""
"109",7,"Stick to basics"
"110",5,""
"111",6,""
"112",3,"works just fine as long as we don't touch windows, but even then it's possible to fix things without much pain."
"113",NA,""
"114",6,""
"115",6,""
"116",NA,""
"117",6,""
"118",5,""
"119",5,""
"120",1,""
"121",4,""
"122",NA,""
"123",1,""
"124",NA,""
"125",3,""
"126",3,"It's not at easy as it sounds.  Output on one platform using \n is incompatible with output from another platform using \n (since the meaning of \n changes depending on platform).  ActiveState ppm repositories aren't as good as native cpan client with compiler, which is hard to get running on windows."
"127",NA,""
"128",6,"The most difficult aspect is installing CPAN modules required for your program to work. To install CPAN modules on a ""fresh"" system that does not have internet access (typical for secured company servers ) can be quite a task."
"129",NA,""
"130",NA,""
"131",NA,""
"132",NA,""
"133",1,""
"134",6,"I would have said ""strongly agree"" on the ""it's easy"" question were it not for Windows, whose differences no amount of work by Perl can disguise.[CR][CR]General comment: Some of the answers will make more sense if you understand that I am a retired programmer who is keeping his hand in and scratching the creativity itch by writing the programs _I_ want to write.[CR][CR]General meta-comment: This survey needs a ""general comments"" box."
"135",4,"Not all modules work the same nor are available."
"136",NA,""
"137",5,"I stick to POSIX systems mostly, so I don't have that much experience"
"138",5,""
"139",NA,""
"140",4,"Doesn't feel native on the Windows platform. Too many modules require cygwin or specific non native libraries."
"141",2,""
"142",NA,""
"143",6,""
"144",NA,""
"145",6,"Cross-platform processes and threading are difficult.  In general Perl's approach of portability where possible. allowing raw access to the system and detecting differences where necessary is a good approach."
"146",6,""
"147",NA,""
"148",7,"actual version for different platforms are different. "
"149",5,""
"150",5,""
"151",5,""
"152",4,"Ensuring CPAN dependencies can be a nightmare and installing them can take up huge chunks of time, especially when they fail at autoinstalling dependencies and you have to manually work through the dependency chain. "
"153",NA,""
"154",6,""
"155",5,"Danga doesn't work on Win32... UNIX is still king. Windows is improving... but is still coach class."
"156",NA,""
"157",6,""
"158",1,"I just try to avoid using a bad platform for the job in the first place.  It just so happens that my reasons to use perl coincide with my reasons to use linux."
"159",1,"There should be special highlighting in perldocs that indicates fully cross-platform keywords and modules, much the same as is done in some books with blue highlighting to indicate cross-platform keywords in various languages.[CR][CR]There should also be a list of fully cross-platform keywords and modules provided in the perldocs."
"160",NA,""
"161",5,""
"162",4,""
"163",5,"The biggest problem for cross platform Perl has been being able to get a consistent install - especially of CPAN modules. In addition for an application, it seems like a lot of trouble to get a working install to a user's machine that the application can use (at least on Windows)"
"164",5,""
"165",5,""
"166",3,"wxWidgets doesn't seem to work very well on Mac"
"167",6,""
"168",3,""
"169",7,"I don't know about Windoze [Although I've ""heard"" of Strawberry Perl] but ""/usr/local/bin/perl"" on Mac OS X Leopard usually works the same as Linux (5.8.8 is unacceptable, Apple; I need given/when!)"
"170",5,"Cygwin is your friend. I get by with a little help from my friends."
"171",6,"Perl is very portable per se, but it's quite difficult to deal with Microsoft platforms' annoyances."
"172",1,""
"173",6,""
"174",7,"Runs like a baby. I use to run the same tools on Windows, Linux e Solaris. Never got bad times."
"175",NA,""
"176",NA,""
"177",NA,""
"178",1,"never tried"
"179",NA,""
"180",5,""
"181",5,""
"182",NA,""
"183",6,""
"184",6,""
"185",1,"I use Linux or BSD for everything."
"186",1,""
"187",7,"I see tests as important for me as a programmer.[CR]However, a normal user does not understand their importance and might never understand them in the future either."
"188",NA,""
"189",NA,""
"190",NA,""
"191",NA,""
"192",4,"Like many of your questions, this section has different answers depending on how well the code has been put together. Someone who has experience of multiple differing platforms, and who appreciates cross-platform issues, is more likely to write more portable code that someone who only knows one platform."
"193",5,""
"194",6,""
"195",6,""
"196",NA,""
"197",NA,""
"198",6,"strawberry perl is god"
"199",5,"It is getting noticeably better, but the pace of development in some areas makes keeping up with all the non-perl dependencies very tricky."
"200",6,""
"201",5,"Waaaayyyy better than C/C++ (despite autoconf etc), but it's a notoriously difficult field."
"202",5,""
"203",4,"99% of my time spent on Solaris"
"204",5,""
"205",1,""
"206",6,""
"207",5,"I don't do it much."
"208",5,""
"209",6,"Easy for easy task and doable for complex"
"210",6,""
"211",4,"Deployment has been a pain, maybe there's a good way to do it? I've not found it"
"212",5,"I don't do it much; my code usually deploys in one platform or another, but not both."
"213",1,"Don't care about it."
"214",NA,""
"215",NA,""
"216",5,"Depending on task sometimes it's tricky"
"217",1,""
"218",5,""
"219",NA,""
"220",NA,""
"221",NA,""
"222",6,""
"223",1,"If it's not running on UNIX, I don't care."
"224",2,"use other language than perl, e. g. Java"
"225",1,""
"226",1,""
"227",5,"no experience"
"228",1,""
"229",NA,""
"230",6,"The big problem is fork(). I use a fork()less Perl on Windows, and *many* tests fail on CPAN modules due to a missing fork()"
"231",7,""
"232",5,""
"233",NA,""
"234",NA,""
"235",5,""
"236",6,""
"237",5,"Do not do much of it"
"238",5,"I like Perl fo this quality."
"239",6,"if you don't use sytem() - take it and run it"
"240",NA,""
"241",5,""
"242",4,"the shebang is a problem under windows as it is not ignored (even google says something else!)"
"243",NA,""
"244",NA,""
"245",1,""
"246",1,"Threads programming is harder to do cross platform and not always being able to get the necessary DBD modules installed can be a problem when developing on OSX and then deploying on Linux."
"247",NA,""
"248",1,""
"249",4,""
"250",NA,""
"251",1,""
"252",NA,""
"253",6,"Most of my stuff works in cygwin/OSX/linux just fine!"
"254",NA,""
"255",1,""
"256",5,""
"257",5,"using active state not all cpan modules are available"
"258",5,"i just try to avoid windows"
"259",4,""
"260",2,"Yech"
"261",NA,""
"262",6,""
"263",1,""
"264",6,""
"265",4,"Cross platform programming is fine as long there are no GUI, no critical socket operations and not too many third party libraries (e.g. openssl or libxml) involved."
"266",7,""
"267",6,""
"268",6,""
"269",1,""
"270",6,""
"271",NA,""
"272",1,""
"273",7,"It's always worked out well for me."
"274",5,""
"275",6,"ActiveState makes it easy"
"276",NA,""
"277",5,""
"278",6,""
"279",NA,""
"280",5,"things are a little painful in Windows... osx, linux, solaris all work great"
"281",5,""
"282",1,"No comments on cross platform programming. The CPAN questions should have frequency responses (e.g.: never, sometimes, always) instead of agreement options."
"283",7,"its nice"
"284",1,""
"285",NA,""
"286",NA,""
"287",5,""
"288",6,"one still has to keep the platform issues in mind"
"289",NA,""
"290",NA,""
"291",NA,""
"292",5,""
"293",4,"Better than a lot of languages, but still some differences."
"294",6,""
"295",NA,""
"296",6,""
"297",6,""
"298",NA,""
"299",7,""
"300",1,""
"301",6,"Great way to leverage code"
"302",6,""
"303",1,""
"304",7,"This is vital. At least Windows and Linux"
"305",4,"I find handling file paths cross platform little painful"
"306",5,"It could be much better. But all the options suck."
"307",1,""
"308",6,""
"309",6,"The first thing that comes to mind about incompatibility issues is related to file paths in Windows."
"310",5,"I tend to find that installation of modules presents more difficulties than actually using the code once it's properly installed.[CR][CR]Every direct CPAN interface I've ever used has fallen far short of the kind of basic, brain-dead usability (a la apt-get install foo) that I really want from a package manager."
"311",5,"UNIX-like OSes seem to be easier to do cross platform work on, while Windows presents more issues."
"312",NA,""
"313",NA,""
"314",6,""
"315",NA,""
"316",6,""
"317",NA,""
"318",5,""
"319",1,""
"320",4,""
"321",6,""
"322",NA,""
"323",6,""
"324",6,"typically very easy for what I do."
"325",NA,""
"326",4,""
"327",6,""
"328",NA,"Most people don't understand how to do it, or why they should bother."
"329",NA,""
"330",7,""
"331",NA,""
"332",6,"I'm not doing it much, but it worked well enough the few times I tried."
"333",7,""
"334",3,"MORe windows support would be good"
"335",NA,""
"336",2,"Perl in itself is highly portable, however I find it rare that modules work on more than one platform (assuming it even works on one platform).[CR]"
"337",1,""
"338",NA,""
"339",NA,""
"340",7,""
"341",NA,""
"342",NA,""
"343",5,""
"344",3,""
"345",5,""
"346",3,""
"347",7,""
"348",6,"Strawberry Perl goes a log way to supporting cross-platform Perl. I've found it a little too hard to get working with Oracle so have stayed with ActivState - which doesn't support it to a great degree.[CR][CR]I find it very hard to get a lot of modules compiled on Max OSX. DBD::mysql wouldn't compile with the default Apple mysql - I needed to go straight to mysql.com. Can't get DBD::Pg to compile at all. Makes developing on a Mac difficult in my line of business, and I end up using a Linux VM on my MacBook"
"349",NA,""
"350",NA,""
"351",NA,""
"352",6,""
"353",NA,""
"354",6,"It's a God-sent. I have yet to program in a language that makes this easier (certainly not Java). With Wx, we can even do portable AND nice looking GUIs."
"355",2,"For developing, its rather difficult. Having no decent editor that can support running on a client windows machine through an ssh tunnel to a remote linux machine means I'm stuck using vim over putty. When padre adds support for this, it will be a significant improvement. However, because the deployment will be on the remote server, all sorts of hackery will be necessary to let the ide ""know"" the details of the deployment environment. Libraries and the like.[CR]"
"356",NA,""
"357",4,"i love perl so much i dont use windows naymore"
"358",1,"never needed it"
"359",NA,""
"360",6,""
"361",5,""
"362",NA,""
"363",5,""
"364",NA,""
"365",5,""
"366",NA,""
"367",7,""
"368",6,"Everything non architectural dependent is remarquable. Otherwise, e.g. thread programming require anyway thinking twice between Windows and *nix"
"369",1,""
"370",5,""
"371",5,""
"372",3,"(Cross platform for me is essentially Linux and Windows)[CR]While Perl is better than most at it, most 3rd party support for Perl on Windows is for ActiveState, which limits package selection."
"373",6,""
"374",NA,""
"375",5,"works fine!"
"376",5,"most CPAN modules I use do pretty well. However, most application code I come across does NOT."
"377",NA,""
"378",7,"Cross platform programming is pretty easy given that you are on the same version of perl on the different platforms.  If a module has an issue on one platform it will show up on most, if not all, of the other platforms.  When that happens you need to look at the code to see if this module really meets your needs."
"379",NA,""
"380",5,""
"381",NA,"Never had to do it."
"382",NA,""
"383",3,""
"384",NA,""
"385",1,""
"386",1,""
"387",NA,""
"388",NA,""
"389",6,"The biggest issue I have is that not all CPAN modules I use are installed on different platforms."
"390",5,""
"391",NA,""
"392",NA,""
"393",5,""
"394",NA,""
"395",NA,""
"396",1,""
"397",6,""
"398",5,"Similar to java, internal applications will typically be developed for 1 environment, and then deploy to a similar environment, regardless of the x-platform abilities of the interpreter.  [CR]Targeting Unix makes it easy to deploy on server-class OSes.  Targeting Win32 makes it easier for beginners to pickup and learn the language.  Supporting x-platform abilities helps those beginners move quickly to server environments"
"399",5,"Perl has a Unix heritage and it shows -- but Unix is still usually the most powerful platform available!"
"400",NA,""
"401",5,""
"402",1,"never used"
"403",NA,""
"404",5,"I use several different flavors of Linux and I can usually count on my applications working 100% of the time on any of them. "
"405",4,""
"406",NA,""
"407",5,""
"408",NA,""
"409",6,""
"410",NA,""
"411",7,"It works!"
"412",6,""
"413",1,""
"414",NA,""
"415",4,""
"416",NA,""
"417",6,"Never use windows, I understand that's where most of the cross-platform trouble is"
"418",5,"Still a pain in the ass, but much easier with Strawberry Perl, and definitely easier than in other languages"
"419",NA,""
"420",7,"love it."
"421",NA,""
"422",6,"Windows doesn't count! Seriously though, my code runs on OS X, linux and Solaris w/o any issue on a regular basis.  I have been pleasantly surprised at the amount of time that co-workers can make use of utility scripts I've written using Strawberry, but got forbid we ever count on Perl code on windows in production..."
"423",NA,""
"424",1,""
"425",5,""
"426",NA,""
"427",7,"See earlier comment about CPAN module installation on different platforms. "
"428",NA,""
"429",1,""
"430",NA,""
"431",7,""
"432",NA,""
"433",6,""
"434",NA,""
"435",NA,""
"436",1,""
"437",5,""
"438",4,""
"439",NA,""
"440",3,"Windows is painful, so I avoid it as far as possible"
"441",NA,""
"442",5,""
"443",7,"It all seems to work fine, as long as the modules are available for all platforms."
"444",6,"Better than with many other languages, including some selling their ""portability"" as a feature (Java for instance)."
"445",6,"cpanminus rulez[CR][CR]Sometimes machines are so ""secure"" that they don't have internet access or even http_proxy options.[CR][CR]Some kind of cpanssh would be nice.[CR]Or how about being able to download a tarball containing all dependencies."
"446",NA,""
"447",NA,""
"448",5,"Would be helpful to abstract platform differences away, e.g. *not* having to ""use Win32"" when required.[CR][CR]APIs to cross-platform libs like WxWindows, GTK, SDL are often very complicated and difficult to start developing with. I think a lot of the trouble comes down to the libs changing and a lot of tutorials being out-of-date and/or inaccurate and/or not sufficiently cross-platform compatible.[CR][CR]I choose Perl for cross-platform development but usually only for web apps. I'm sure I'd do more desktop-app development were it easier to get in to."
"449",3,"Occasionally frustrating porting from Mac OS X to CentOS when C++ object libraries are involved."
"450",5,""
"451",5,""
"452",NA,""
"453",5,""
"454",7,"As long as it isn't Windows, there are generally few caveats."
"455",7,""
"456",NA,""
"457",5,"There are a number of modules which I have excluded from use, as they presuppose an OS (usually *nix), and do not work on Windows (or vice versa). There is usually an assumption that you have a C compiler to hand, which may not be the case at client sites. If you are careful, you can successfully use Perl cross platform. In fact, using Strawberry Perl, I now have a portable (USB) Perl environment."
"458",5,""
"459",6,""
"460",1,""
"461",5,""
"462",6,""
"463",6,""
"464",6,"Perl is extremely portable across platforms, and this is a great strength."
"465",6,"not usual to me"
"466",NA,""
"467",1,""
"468",NA,""
"469",NA,""
"470",5,"I <3 File::Spec.  That said, most of my heavy stuff runs on Linux anyways."
"471",1,""
"472",NA,""
"473",6,""
"474",NA,""
"475",7,"Easier than in any other language I use"
"476",5,"obviously depends heavily on the type of application"
"477",NA,""
"478",NA,""
"479",NA,""
"480",6,""
"481",5,"Perl has very little in the way of organized QA, and little documentation about what system requirements actually are."
"482",NA,""
"483",5,"I generally only force install one Windows when the tests are broken, which isn't uncommon."
"484",NA,""
"485",6,"Windows line endings sometimes cause problems[CR]Getting Modules to work under cygwin is sometimes also a challange[CR]Getting more esoteric modules to work on strange platforms can be a real challenge... "
"486",NA,""
"487",1,""
"488",NA,""
"489",7,"It's one of the reasons I generally prefer Perl to C++."
"490",5,"Cross-platform Perl is only easy if the platforms implement Unix/POSIX abstractions.  Windows, not so much yet."
"491",NA,""
"492",6,"Issues with @INC and where perl modules load."
"493",NA,""
"494",NA,""
"495",6,""
"496",1,""
"497",NA,""
"498",4,""
"499",6,""
"500",NA,""
"501",3,"I rely a lot on modules that link to C code using XS or similar, so this is not a fair comparison."
"502",NA,""
"503",NA,""
"504",7,"All my code runs on more than one platform. It's not too difficult."
"505",5,""
"506",7,""
"507",1,"nup"
"508",NA,""
"509",5,""
"510",1,""
"511",6,"Most of my programs are self-contained and I simply offload any paths to a configuration file rather than loading the module for doing it in a more cross-platform friendly way."
"512",4,"libwin32 (Win32::*) lacks support.[CR]Perl programming on proprietary Unixes with CPAN modules is painful.[CR]The Perl Foundation should have contracts with IBM, HP to have CPAN Testers on those environment."
"513",NA,""
"514",NA,""
"515",1,""
"516",7,""
"517",6,""
"518",1,""
"519",3,"Deployment on other platforms sucks, no _easy_ packaging."
"520",1,""
"521",5,"most CPAN is shit. "
"522",6,""
"523",1,"I believe that while Perl has its use, Java is better for cross-platform programming."
"524",6,"Ce n'est pas parfait mais on peut s'en sortir"
"525",1,"in our production we only use linux"
"526",5,""
"527",6,""
"528",1,""
"529",5,""
"530",5,""
"531",2,"the few times I've tried perl on windows the experience hasn't been pleasant. a way to package up a perl script, its dependencies, and the perl interpreter into a single executable for windows would be nice (probably does exist somewhere already!) but mostly who cares? run perl on unix and be done with it."
"532",1,"We primary avoid CPAN per se, unless they are packaged into RPMs and packed into the Linux distribution."
"533",2,"cpan seems to run badly on mac environments. on more than one occasion i've had to run off my own webserver, or open a unix/xp machine to get the program running properly cross-platform- i'm sure that this is just my lack of expertise (only been programming for <5yrs)"
"534",3,""
"535",6,""
"536",3,"It is much tougher to cross-deploy, cross-develop than say a language like Java, primarily because of the dependencies on a C/Make based build environment. In a lot of cases, the build environment cannot always be matched to the target envrionment, but technologies like VirtualBox and VMWare workstation can help alleviate some of the struggle."
"537",NA,""
"538",NA,""
"539",5,""
"540",6,"As long as it doesn't deal with COM ports on Windows it works well!"
"541",NA,""
"542",NA,""
"543",1,""
"544",NA,""
"545",6,""
"546",NA,""
"547",6,"Works so much better/easier than I ever would have guessed. Simply ran an old unix-based script on a PC and it worked. Even file specification is simple."
"548",NA,""
"549",NA,""
"550",NA,""
"551",5,"Learned on windows, but only use it on *nix now"
"552",1,""
"553",NA,""
"554",3,"depends on functionality of the application, is not the same a hello world than a threaded server."
"555",5,"The main issues I've had are that many CPAN modules I've needed for one thing or another (often to support other software I'm trying to install rather than for my own coding) haven't been packaged for the operating system I'm using (especially CentOS, but also Mac OS X), forcing me to create OS packages using tools such as cpan2rpm.[CR][CR]I have also had issues where I needed to install several CPAN modules (either with packages or using CPAN directly) to run scripts I developed on one platform on another (especially Mac OS X with MacPorts vs. CentOS)."
"556",1,""
"557",5,"Perhaps not due to perl but new line characters between OS can be treated differently by the native perl functions."
"558",7,""
"559",2,"I'm not used to Windows platforms, and when I want to test a module of my own on these platforms, it's always a pain for me. Mostly because I've always trouble finding a ""make"" replacement to manually build my modules. I'd like to be able to test Perl modules as easily as under UNIX."
"560",6,"We maintain an in-house Perl distribution for Linux and Windows. It often takes several days to compile new modules with all dependencies on both platforms. Therefore we rarely update modules or update the core Perl."
"561",NA,""
"562",NA,""
"563",6,"Perl is excellent in this regard. "
"564",5,""
"565",NA,""
"566",NA,""
"567",1,""
"568",NA,""
"569",2,"Without external package management, it's hard enough ensuring that your perl libraries are the same across machines - let alone across platforms."
"570",NA,""
"571",7,"It's a language that makes x-platform programming very easy. So long as the dependent modules are installed, you're good to go. "
"572",NA,""
"573",5,""
"574",6,""
"575",NA,""
"576",NA,""
"577",6,"I don't use Perl on Windows."
"578",7,""
"579",NA,""
"580",6,"Perl is one of the best languages for cross platform programming. Portability problems are the exception rather than the rule."
"581",4,"In particular filesystem abstraction is something you need to be aware of."
"582",1,""
"583",5,""
"584",NA,""
"585",3,"My local copy of perl and/or modules is often newer than what's on the deployment server.  I would love it if there was a way to pull some kind of config file off the server and pass it to my local version when running a script to force my local install to act the way the server will.[CR]"
"586",NA,""
"587",5,""
"588",6,""
"589",1,"I never experienced problems (except for process handling) in different Unix-like systems (Amiga OS, Tru64, Solaris, Linux)"
"590",6,""
"591",NA,""
"592",1,"Nope."
"593",6,"It works about as well as one could hope without sacrificing performance on UNIX-like systems."
"594",5,""
"595",3,"Windows filename support is lacking."
"596",6,""
"597",4,""
"598",4,"Modules incorporating XS code or other binaries is painful.[CR]"
"599",NA,""
"600",6,""
"601",2,"things don't often work on windows :)"
"602",NA,""
"603",NA,""
"604",3,"Installing CPAN packages on Windows is hit-and-miss - some install painlessly, others are nearly impossible to install (e.g. Alien::SVN, which insists on compiling Subversion even when libraries and headers are already available)"
"605",6,""
"606",NA,""
"607",NA,""
"608",NA,""
"609",1,""
"610",NA,""
"611",NA,""
"612",NA,""
"613",7,"Perl is the ONLY language we have been able to get to run the same way on all platforms, with Windows being the most problematic."
"614",NA,""
"615",NA,""
"616",5,"Cross platform does not include any variant of Windows."
"617",NA,""
"618",4,""
"619",6,"Across Unix-y platforms (Mac OS-X included), cross-platform Perl programming is a piece of cake.  The *only* issues I've run into when doing cross-platform Perl development were when dealing with Windows platforms (in part due to the slash/backslash difference)"
"620",6,""
"621",NA,""
"622",NA,""
"623",6,"This is one of the biggest wins for Perl. It runs everywhere. It does everything. I recently implemented a smoke system for testing new builds involving: a TCP client (Unix/Windows), a TCP server (Windows), a CGI interface (Unix), a rake to collect result files (Unix/Windows), the framework for the smoke test itself (Windows) and even some of the tests themselves (Windows). Every piece (minus a few Windows unit tests written by someone else) of this system is Perl. Flexibility is key here and Perl delivers."
"624",5,""
"625",3,"Cross platform with anything is difficult, I feel that perl is one of the easier ones for this if a packaging approach is takem. Should never expect customers to be able to use CPAN, CPAN is a programming tool."
"626",1,""
"627",NA,""
"628",5,"It would be good to use one shell across all platforms."
"629",NA,""
"630",NA,""
"631",5,""
"632",3,"I like that it's portable, but I don't have test facilities for cross platform testing."
"633",3,""
"634",5,""
"635",NA,""
"636",4,""
"637",NA,""
"638",5,""
"639",1,""
"640",7,"Never tried it, but I hope it's easy."
"641",NA,""
"642",4,"I've never had problems with the code itself, but getting all the CPAN modules necessary working on all platforms can be a PITA."
"643",2,"I have yet to get ssh on Windows working"
"644",1,""
"645",5,""
"646",6,"Issues are mostly due to platform-centric assumptions in CPAN module. Strawberry Perl has made it easier to work with XS modules on Windows."
"647",4,"Not very familiar with it"
"648",1,""
"649",5,""
"650",7,""
"651",NA,""
"652",6,""
"653",5,"Some modules have odd behavior between Perl distributions."
"654",4,""
"655",NA,""
"656",4,""
"657",1,""
"658",5,"Needs experience. I think Perl is well equipped, but best practices only come with experience."
"659",NA,""
"660",6,"Strawberry Perl FTW (95% of what I do is on *NIX, I've not used Perl on a Mac)"
"661",NA,""
"662",NA,""
"663",7,""
"664",6,"often fails because of back-end libraries (e.g., libxml2, X11, etc.)"
"665",5,""
"666",4,""
"667",1,""
"668",3,""
"669",1,""
"670",7,""
"671",1,""
"672",4,"Neglected in too many resources for perl programming."
"673",NA,""
"674",5,""
"675",6,""
"676",5,""
"677",5,""
"678",1,""
"679",NA,""
"680",NA,""
"681",6,""
"682",NA,""
"683",5,""
"684",6,""
"685",5,""
"686",NA,""
"687",NA,""
"688",3,""
"689",5,""
"690",NA,""
"691",6,""
"692",NA,""
"693",7,""
"694",NA,""
"695",NA,""
"696",6,"90% or more of my applications run unchanged on Linux, OS X, and Windows platforms. The remaining few tend to rely on platform-specific libraries such as Win32 or Mac::Glue. Basically, Perl is more than sufficient for my cross-platform needs."
"697",1,""
"698",6,""
"699",6,""
"700",6,"I haven't done a lot, but what I have done was fairly straight-forward."
"701",4,"Windows = :("
"702",6,""
"703",6,""
"704",5,"Overall decent, but it's sometimes hard to know what will or will not work on (say) Windows vs Unix. Documentation can be rather sparse on this in places."
"705",6,"Unicode in file names is highly problematic on Windows. That's been in perltodo for *years*."
"706",1,""
"707",6,""
"708",3,""
"709",1,""
"710",NA,""
"711",NA,""
"712",NA,""
"713",7,""
"714",NA,""
"715",7,"We do it all the time, but our product includes an embedded perl interpreter, which makes it easy for the business logic of what our product does to be coded in perl."
"716",1,""
"717",7,"You still have to know a bit about the platform in many cases.  Not all modules build on all platforms, and not all core functions are available.  I would love to have an additional flag like -c or -w that would give warnings about possible cross platform issues.  It could simply warn about functions or modules and what platforms they are known not to work on.  (Yes, I know that's asking a lot)"
"718",NA,""
"719",NA,""
"720",7,""
"721",5,""
"722",NA,""
"723",5,"Slashes/backslashes suck :("
"724",4,""
"725",6,"Need pre-compiled perl compatibility between different OS-s (something that I expect in Perl 6)."
"726",NA,""
"727",5,""
"728",6,"I (nearly) always have control of my environment.   So always compile Perl from source and maintain same set of CPAN modules by using central minicpan.   This make is easy!"
"729",3,""
"730",1,""
"731",NA,""
"732",5,""
"733",NA,""
"734",6,"It's quite easy to write portable code (usually by sticking to core Perl functions and Unix semantics), but it's not always easy to set up CPAN modules on Windows."
"735",5,""
"736",5,"Generally OK, but Windows vs Linux can be a challenge"
"737",5,"Some care has to be taken to make sure appropriate modules are used, but there are generally few problems."
"738",5,"Across unix-like Perls is easy; over to Windows is difficult."
"739",7,"Usually works as expected."
"740",6,"Current gui toolkits are not up to the task"
"741",1,""
"742",5,""
"743",6,""
"744",NA,""
"745",4,""
"746",NA,""
"747",NA,""
"748",6,""
"749",1,""
"750",1,""
"751",5,"I mostly live in Linux"
"752",6,""
"753",1,""
"754",5,""
"755",NA,""
"756",3,""
"757",7,""
"758",4,""
"759",1,""
"760",NA,""
"761",7,""
"762",NA,""
"763",5,""
"764",NA,""
"765",6,""
"766",NA,""
"767",NA,""
"768",7,"For what I have done, I haven't done anything that would be tremendously different across platforms."
"769",NA,""
"770",7,""
"771",NA,""
"772",1,"Never did it"
"773",NA,""
"774",3,""
"775",1,""
"776",6,""
"777",7,""
"778",5,""
"779",6,""
"780",NA,""
"781",6,""
"782",6,""
"783",1,""
"784",6,"it works"
"785",1,""
"786",6,""
"787",1,""
"788",5,""
"789",1,"I haven't tried this."
"790",NA,""
"791",5,""
"792",NA,""
"793",NA,""
"794",6,"This traditionally was a very strong case for Perl (made it somewhat unique through the early 2000's, now other stacks are portable enough)."
"795",1,""
"796",4,"It kinda sucks if I'm not aware that, e.g. the // operator isn't available on the slightly older release of perl on my other machine.[CR][CR]And I stay the hell away from windows."
"797",NA,""
"798",1,""
"799",6,"I never use Windows, so ""cross-platform"" to me means Mac OS X versus Linux versus, occasionally, *BSD. Not much of a difference."
"800",NA,""
"801",NA,""
"802",5,""
"803",7,""
"804",NA,""
"805",5,""
"806",6,"CPAN module quality varies a lot. Some sort of certification would be nice (instead of a voluntary test suite, which offers no real incentive to do it ""right"")"
"807",NA,""
"808",5,"I wish I had learned in the beginning how to avoid direct OS calls (ls, rm,...) to make my scripts more easily unix/windows portable"
"809",NA,""
"810",1,""
"811",4,""
"812",3,""
"813",6,""
"814",NA,""
"815",5,""
"816",6,""
"817",6,""
"818",5,""
"819",1,""
"820",NA,""
"821",7,""
"822",6,""
"823",NA,""
"824",2,""
"825",NA,""
"826",4,""
"827",5,""
"828",NA,""
"829",1,""
"830",1,""
"831",6,""
"832",NA,""
"833",6,"For the most part, it seems to be pretty easy.  Core Perl is very portable; CPAN modules can be another story.  Overall, though, I feel pretty confident about using a Perl script I've written, excluding ones with non-portable external calls/shell commands, on any computer with a modern Perl interpreter."
"834",6,""
"835",NA,""
"836",5,""
"837",NA,""
"838",5,""
"839",7,""
"840",1,""
"841",1,"I run almost all perl on Solaris boxes."
"842",5,""
"843",NA,""
"844",NA,""
"845",NA,""
"846",6,""
"847",5,""
"848",NA,""
"849",5,"Portability on UNIX-like systems is great.[CR][CR]Porting to Windows is hit or miss when using CPAN."
"850",NA,""
"851",4,""
"852",NA,""
"853",5,""
"854",4,""
"855",7,""
"856",5,""
"857",4,""
"858",NA,""
"859",6,""
"860",5,""
"861",1,""
"862",7,""
"863",5,""
"864",5,""
"865",4,"Apples perl on osx sucks."
"866",NA,""
"867",NA,""
"868",5,""
"869",NA,""
"870",1,""
"871",1,""
"872",3,""
"873",1,""
"874",4,""
"875",NA,""
"876",5,""
"877",5,""
"878",NA,""
"879",4,""
"880",NA,""
"881",NA,""
"882",5,""
"883",3,"Windows sucks, OSX seems to have some bizarro problems. There should probably be some form of automated testing occurring here."
"884",5,"It's a box of chocolates"
"885",7,""
"886",1,""
"887",6,""
"888",NA,""
"889",6,""
"890",3,""
"891",1,""
"892",1,""
"893",6,""
"894",NA,""
"895",6,"Perl has very good cross-platform feature but some programmers don't know make your applications to ""use"" this ""feature"" correctly"
"896",5,"If the programmer uses the correct tools to do it, it's easy"
"897",5,"PPM needs to die"
"898",7,""
"899",NA,""
"900",5,""
"901",NA,""
"902",NA,""
"903",NA,""
"904",NA,""
"905",NA,""
"906",NA,""
"907",NA,""
"908",3,"Anything requiring non-core modules is not something I'd like to try running cross-platform."
"909",6,""
"910",NA,""
"911",6,""
"912",NA,""
"913",7,"We have cross-platform developers (Linux deploying to Win32, Win32 deploying to Linux) so I'd say it works pretty well."
"914",NA,""
"915",4,""
"916",NA,""
"917",6,""
"918",NA,""
"919",6,"Some things are seamless; more often there are system-specific issues."
"920",6,""
"921",6,""
"922",NA,""
"923",6,""
"924",6,"It's easier than it has any right to be."
"925",NA,""
"926",4,""
"927",6,""
"928",1,""
"929",1,"I do multiple Unix versions (on about 6000 servers).   With multiple Perl versions; and sometimes not having a good set of modules.  There's a definite bias to portability and reliability that means I don't do anything very advanced."
"930",NA,""
"931",6,""
"932",6,""
"933",1,""
"934",6,""
"935",7,""
"936",6,""
"937",NA,""
"938",1,""
"939",6,"I don't do much of it, but it seems to be fine if you use the CPAN and avoid platform-specific stuff."
"940",7,""
"941",5,""
"942",NA,""
"943",2,"""Debian /and/ Redhat!"" is not cross-platform. I don't believe most of the modules were tested outside Linux"
"944",5,""
"945",6,""
"946",6,""
"947",1,""
"948",5,""
"949",6,""
"950",6,"as long as (roughly) the same version of perl is supported on all platforms and as long as care is taken to write programs in a cross platform way, compatibility is great"
"951",5,""
"952",5,""
"953",NA,""
"954",1,""
"955",NA,""
"956",4,""
"957",6,""
"958",NA,""
"959",6,""
"960",5,""
"961",NA,""
"962",NA,""
"963",1,""
"964",6,""
"965",NA,""
"966",5,""
"967",7,""
"968",1,""
"969",5,""
"970",6,"Can't remember any issues of consequence - I supposed the biggest problem would be when a CPAN module is not cross platform capable."
"971",NA,""
"972",5,"Seldom run into issues between Linux, Solaris, and OS X.[CR]Never had good experience with Windows - that seems to require more knowledge about what to avoid."
"973",3,""
"974",NA,""
"975",7,"I am always removing calls to system and exec from other people's code. Others tend to use it as a replacement for shell. When I point out that Perl often has built-ins, they are surprised. By doing so, Perl moves across platforms quite nicely."
"976",5,""
"977",NA,""
"978",5,""
"979",NA,""
"980",7,""
"981",NA,""
"982",6,""
"983",1,"I'm never sure whether a CPAN install will interfere with the currently running Linux packager, so I'm avoiding CPAN installs if possible."
"984",3,""
"985",3,"I mostly use Debian packages, so I hate it when I can't find them on other platforms."
"986",7,"It's awesome!"
"987",5,"I never tried it."
"988",NA,""
"989",1,""
"990",4,""
"991",NA,""
"992",3,""
"993",NA,""
"994",NA,""
"995",NA,""
"996",5,""
"997",4,"no"
"998",6,""
"999",7,""
"1000",5,""
"1001",5,""
"1002",NA,""
"1003",6,""
"1004",6,""
"1005",3,"Perl GUI is needed."
"1006",7,"I do it all the time (though my code is nearly always used on some flavour of Unix)"
"1007",NA,""
"1008",NA,""
"1009",6,"Again, we need cross-compiling to be possible. Sometimes, target is not able to compile perl, and it is very painful to wait for many hours that the compilation ends in qemu...[CR]Other than that, porting an application from unix to windows is easy (when not using special features)."
"1010",1,""
"1011",6,"Perl on Android would be really, really, really really really cool. Even more cool would be Perl Bindings for the Android API."
"1012",5,""
"1013",NA,""
"1014",6,""
"1015",6,""
"1016",6,""
"1017",NA,""
"1018",6,""
"1019",NA,""
"1020",5,""
"1021",5,"Not an easy thing in any language. Biggest problem for me has been having common modules installed, or having an easy way for people to install them. Net::SSLeay or Crypt::SSLeay can turn into a nightmare on Windows"
"1022",5,"If I have cross platform problems, they are mostly in my own code and not in CPAN modules."
"1023",5,""
"1024",4,""
"1025",4,""
"1026",NA,""
"1027",6,""
"1028",NA,""
"1029",2,"cpan module is not easy to install under windows, for beginner"
"1030",6,"As long as you don't get yourself into thinking that a standard Windows install is a suitable platform for running code in, how far wrong can you go?"
"1031",5,""
"1032",6,""
"1033",1,""
"1034",1,""
"1035",NA,""
"1036",1,""
"1037",NA,""
"1038",2,"Without CPAN modules, it's fine.  Depending on already-installed CPAN modules is impossible.  Distributing code + CPAN modules is a mess.  Even if it's the same platform, just different servers.  This is (for me) one of the hardest areas of perl programming."
"1039",NA,""
"1040",6,""
"1041",5,""
"1042",NA,""
"1043",6,"Perl is great for cross-platform development, but you have to closely know your target operating system to install CPAN modules."
"1044",NA,""
"1045",NA,""
"1046",7,""
"1047",5,""
"1048",NA,""
"1049",NA,""
"1050",1,""
"1051",6,"It's a lot easier with Perl than with C++ or C.  And don't get me started on the 'Porting to a new OS is easy, once you have the right set of IF/DEFs set up....' rantage.  "
"1052",5,"Location for perl binaries can change cross platform"
"1053",6,""
"1054",2,"I avoid Windows like the plague!"
"1055",NA,""
"1056",5,""
"1057",6,""
"1058",NA,""
"1059",NA,""
"1060",5,"perl itself is usually no problem,[CR]but there's quite a lot of modules on CPAN that don't work[CR](or work differently) on multiple platforms"
"1061",1,""
"1062",5,""
"1063",1,""
"1064",NA,""
"1065",NA,""
"1066",5,""
"1067",6,""
"1068",NA,""
"1069",1,""
"1070",5,""
"1071",NA,""
"1072",7,"This has made Perl very valuable in my career."
"1073",NA,""
"1074",5,"GUI support is my biggest problem as no one has the dependencies"
"1075",1,""
"1076",3,""
"1077",NA,""
"1078",6,""
"1079",3,""
"1080",5,""
"1081",NA,""
"1082",NA,""
"1083",7,"My normal practice is to develop on OSX (perl 5.8.x) and deploy to various Linuxes (perl 5.8.x or 5.10.x) and I don't think I've ever run into an issue on deployment other than a CPAN module not having been installed on the target system."
"1084",1,""
"1085",NA,""
"1086",5,""
"1087",6,""
"1088",NA,""
"1089",4,""
"1090",5,""
"1091",4,""
"1092",6,"Mind the shebang! (Linux -> Windows)"
"1093",NA,""
"1094",NA,""
"1095",5,""
"1096",1,""
"1097",NA,""
"1098",NA,""
"1099",1,""
"1100",NA,""
"1101",NA,""
"1102",NA,""
"1103",6,"a really good open source IDE is still lacking"
"1104",5,""
"1105",4,"Everything windows is a bit weird in every language :)"
"1106",NA,""
"1107",6,"Abstraction / platform independence is one thing, but sometimes you have to emulate the behavior of native applications on the respective platform. E.g. for range locking of files on Win32 you'll have to resort to Win32::API which is so general low-level that it is not yet ported to 64bit versions."
"1108",NA,""
"1109",1,""
"1110",NA,""
"1111",NA,""
"1112",6,""
"1113",NA,""
"1114",7,""
"1115",6,""
"1116",6,""
"1117",6,"If you do it right, it's pretty easy; If you get some novices involved, things break quickly."
"1118",NA,""
"1119",NA,""
"1120",1,""
"1121",4,""
"1122",5,"classis gnu toolchain under windows is pain: compiling C modules on windows is ugly."
"1123",6,""
"1124",1,""
"1125",NA,""
"1126",5,""
"1127",NA,""
"1128",NA,""
"1129",NA,""
"1130",3,""
"1131",6,"When you keep it as basic as I do, it's not too bad."
"1132",1,""
"1133",6,"Its good."
"1134",NA,""
"1135",1,"i don' use modules, wich test failed"
"1136",3,"missing GUI and SSL in core perl"
"1137",6,""
"1138",5,"perl saved my live, when I had to touch windows, a few years ago"
"1139",NA,""
"1140",6,"Keeping it simple, and pure Perl wherever possible works for me!"
"1141",NA,""
"1142",NA,""
"1143",NA,""
"1144",6,""
"1145",NA,""
"1146",6,"I'm working on it."
"1147",NA,""
"1148",1,""
"1149",7,""
"1150",NA,""
"1151",5,""
"1152",NA,""
"1153",1,""
"1154",1,"I live exclusively in Linux land so I don't really know anything about this."
"1155",NA,""
"1156",1,""
"1157",4,"Definitely a bit hairy compared to some newer languages"
"1158",3,"I've done it, but I often just reimplement platform-specific stuff."
"1159",1,"I haven't worked on such problems"
"1160",5,"It works."
"1161",7,"Anyone who uses perl on Windows has more then the evolutionary provided number of holes in their head :)"
"1162",NA,""
"1163",6,""
"1164",6,"die, windows, die :("
"1165",6,""
"1166",6,""
"1167",NA,""
"1168",1,""
"1169",NA,""
"1170",5,""
"1171",NA,""
"1172",1,"never tried"
"1173",3,""
"1174",NA,""
"1175",NA,""
"1176",6,""
"1177",NA,""
"1178",6,""
"1179",5,""
"1180",5,"it's possible but not real fun."
"1181",7,""
"1182",5,""
"1183",NA,""
"1184",6,""
"1185",NA,""
"1186",NA,""
"1187",NA,""
"1188",NA,""
"1189",1,"Windows is the sticking point!"
"1190",5,""
"1191",5,""
"1192",NA,""
"1193",5,"Not really.. file paths are about the biggest headache for me."
"1194",5,"Doesn't seem like a big deal: OS X is Unix, and Windows, well, I try to avoid writing Perl for Windows because I can't count on its being available on other people's boxes."
"1195",5,""
"1196",NA,""
"1197",NA,""
"1198",NA,""
"1199",1,"I tend to only run on unix systems, so I can't really say much about this.  Cross platform for me is Debian to OpenSolaris or OpenSolaris to Debian.  Never do run into issues."
"1200",6,""
"1201",NA,""
"1202",5,""
"1203",1,""
"1204",NA,""
"1205",6,"Great feature"
"1206",6,"Cross Platform Perl Programming is amazing.  It's pretty smooth, and I haven't had problems with it outside of CPAN modules not being installed properly.  "
"1207",NA,""
"1208",NA,""
"1209",5,""
"1210",NA,""
"1211",6,"Perl scripts generally work great cross-platform"
"1212",6,""
"1213",4,""
"1214",NA,""
"1215",5,""
"1216",6,""
"1217",1,""
"1218",6,""
"1219",5,"perl is standard on linux and macos, but should be installed on windows. Tk does not works well on macosx.[CR]using new language features (5.10 then 5.12) is not easy because many linux distro and macos follow slowly new perl versions."
"1220",6,""
"1221",5,"the basics are ok - but process activation/control for windows - requires special handling via WIN32 - which is a bad thing."
"1222",6,"Use standard CPAN modules like File::Spec and File::Basename instead of reinventing the wheel."
"1223",NA,""
"1224",1,""
"1225",1,""
"1226",7,""
"1227",NA,""
"1228",6,""
"1229",4,""
"1230",5,""
"1231",6,"it works most of the time"
"1232",NA,""
"1233",4,"I think packaging libs with an application may be more useful than installing them on the target system; bandwidth is rather cheap - searching and installation is time consuming and thus expensive"
"1234",NA,""
"1235",1,""
"1236",5,""
"1237",NA,""
"1238",5,"I use perl and perl6 on FreeBSD and Windows. I wish WxPerl/Scintilla/related was more uptodate"
"1239",6,""
"1240",6,""
"1241",NA,""
"1242",NA,""
"1243",NA,""
"1244",7,""
"1245",NA,""
"1246",6,"I have run into some difficulties, but overall, I find that most people do a wonderful job of planning their modules to not be platform dependent."
"1247",NA,""
"1248",6,"I mostly use pkgsrc and maintain cpan modules there, when I need them cross-platform. I do not use different distributions for one project."
"1249",NA,""
"1250",NA,""
"1251",5,""
"1252",6,""
"1253",7,"Often missed an alternative for usleep on windows."
"1254",NA,""
"1255",NA,""
"1256",1,"i mostly don't care, my platforms (linux, bsd) are mostly compatible for any details that might trip up perl"
"1257",1,""
"1258",1,""
"1259",4,""
"1260",NA,""
"1261",NA,""
"1262",4,"CPAN is craving for a huge amount of love"
"1263",6,""
"1264",NA,""
"1265",1,""
"1266",5,"If you stick to the CLI environment, it's great. If you need a GUI app to be cross-platform, you're boned: either you use TK (dislike) or you need separate front ends for every system..."
"1267",NA,""
"1268",6,""
"1269",1,""
"1270",NA,""
"1271",5,"A lot of the problems between linux and solaris appear to be due to the latter not using GNU tools by default (see Archive::Tar)"
"1272",NA,""
"1273",6,""
"1274",NA,""
"1275",NA,""
"1276",1,""
"1277",NA,""
"1278",6,""
"1279",NA,""
"1280",7,""
"1281",5,"Generally good and useful."
"1282",7,""
"1283",NA,""
"1284",6,""
"1285",NA,""
"1286",NA,""
"1287",6,""
"1288",7,""
"1289",5,"I haven't done much of it, but the times that I have it has worked."
"1290",NA,""
"1291",NA,""
"1292",NA,""
"1293",5,""
"1294",5,""
"1295",NA,""
"1296",7,"Excellent"
"1297",6,""
"1298",5,"Not done much of it, but what I did was straightforward enough"
"1299",NA,""
"1300",NA,""
"1301",1,"stop using windows"
"1302",5,""
"1303",7,"couldn't be better (for non-interactive batch scripts)"
"1304",NA,""
"1305",5,""
"1306",5,"WWW::Mechanize seem difficult to install on windows"
"1307",5,"Could we just vanish Windows from the face of the earth? It would make life so much easier..."
"1308",5,"ptaform programming is always a challenge even in perl"
"1309",NA,""
"1310",NA,""
"1311",5,""
"1312",7,"Usually works without any problem."
"1313",6,""
"1314",1,""
"1315",4,""
"1316",NA,""
"1317",5,"I've run into a number of problems running scripts on both windows and linux boxes successfully, but I've been out of the windows world since 2006 so I don't know how much Strawberry Perl and improvements to ActiveState Perl have brought us."
"1318",1,""
"1319",5,""
"1320",NA,""
"1321",2,""
"1322",7,""
"1323",6,""
"1324",1,""
"1325",6,""
"1326",1,""
"1327",6,"None. Perl is quite good already."
"1328",6,"thats one of the reasons i like it"
"1329",6,""
"1330",6,""
"1331",NA,""
"1332",1,""
"1333",NA,""
"1334",NA,""
"1335",NA,""
"1336",1,""
"1337",5,""
"1338",NA,""
"1339",6,""
"1340",3,""
"1341",6,""
"1342",5,"if a module A depends on module B and B is not working uner a specific OS it makes very hard to make a workaround, because A depends on B."
"1343",7,""
"1344",NA,""
"1345",4,"Solaris' PERL is lame =)"
"1346",1,""
"1347",4,""
"1348",NA,""
"1349",6,""
"1350",5,""
"1351",1,""
"1352",7,""
"1353",5,"getting better"
"1354",NA,""
"1355",5,""
"1356",NA,""
"1357",6,""
"1358",NA,""
"1359",6,""
"1360",5,"The only real problem is when you use non-Perl modules, like OS system calls or whatever."
"1361",6,"Yes!"
"1362",1,""
"1363",4,""
"1364",5,"its vital for my word"
"1365",7,"This is why I favor Perl, besides good modularity and the CPAN! My modules are intended to run on servers, together with web servers (Apache, Oracle HTTP Server, IIS), database servers (Oracle), and sometimes SAP. [CR]Platforms are Linux and Windows, both 32 and 64 bit, plus Solaris and AIX.[CR]BTW, we switched from PHP to Perl a number of years ago. Customers' administrators sometimes refused to add PHP to their servers, mostly for security reasons. Software projects are specialized interfaces between Oracle and SAP and other systems and services, and a big application creating PDFs based on configuration (30.000+ lines - now write that in C...)"
"1366",NA,""
"1367",NA,""
"1368",5,""
"1369",5,""
"1370",6,"My platforms are just FreeBSD and Ubuntu. I've never had problems running cross-platform there. Never used perl on windows or OS X."
"1371",7,""
"1372",5,"Cross platform perl programming is doable but often more painful than modern languages due to the preponderance of backtick and system calls that you see in perl scripts.  Other languages aren't used as glue as often so those system calls just don't happen as often."
"1373",5,""
"1374",7,"Strawberry Perl fixed *a lot* of cross platform issues (Alias++). Maybe CPAN meta information should include the ability to show a given module works only on some platforms."
"1375",NA,""
"1376",1,""
"1377",1,""
"1378",NA,""
"1379",6,"Building some modules can be a real pain"
"1380",4,"I've encountered a lot of difficulties when the debian package maintainers and the CPAN maintainers step on each others toes"
"1381",NA,""
"1382",1,""
"1383",NA,""
"1384",NA,""
"1385",5,""
"1386",NA,""
"1387",1,""
"1388",6,""
"1389",6,"Not really, usually if I'm writing something for another platform, it's on Windows and it's for something specific to Windows.  Unless there's a specific need to run it on another platform, I stay with Linux."
"1390",1,""
"1391",1,""
"1392",NA,""
"1393",6,""
"1394",5,""
"1395",5,""
"1396",1,""
"1397",NA,""
"1398",4,""
"1399",5,"module dependencies ... "
"1400",3,""
"1401",NA,""
"1402",5,""
"1403",NA,""
"1404",7,""
"1405",6,""
"1406",4,""
"1407",6,""
"1408",4,""
"1409",5,"remarkably good"
"1410",NA,""
"1411",NA,""
"1412",6,"windows sucks"
"1413",NA,""
"1414",NA,""
"1415",5,""
"1416",4,"Windows is the only sore point but support has been much improved in recent years"
"1417",5,""
"1418",1,""
"1419",NA,""
"1420",7,"I do cross-platform development all the time.  I've written Perl scripts that have been portable across Windows, Linux and several commercial Unix variants."
"1421",5,""
"1422",1,""
"1423",5,""
"1424",5,""
"1425",7,"There is no easy way to do patches in ""perl -MCPAN -e shell"". You have to know WHEN to pause the perl process, patch the package in /root/.cpan/ and then resume."
"1426",6,""
"1427",5,"it's fairly easy to run cross-platform but not as easy as java"
"1428",NA,""
"1429",5,""
"1430",NA,""
"1431",5,""
"1432",5,""
"1433",NA,""
"1434",6,""
"1435",7,""
"1436",1,""
"1437",2,""
"1438",1,"Windows sucks for almost everything.  Perl makes things better."
"1439",6,"Be prepared to handle end-of-line conventions correctly, avoid system calls, use modules"
"1440",1,""
"1441",5,""
"1442",6,""
"1443",6,""
"1444",NA,""
"1445",2,""
"1446",4,""
"1447",NA,""
"1448",3,"On Windows, using ActiveState perl: CPAN install uses a totally different tool than Unix which is annoying; things generally seem more buggy, especially in those parts of code where the API provided by perl is very much Unix-centric and has to be emulated on Windows.[CR][CR]We plan to move to strawberry perl on Windows which I'm hopeful will be better."
"1449",6,""
"1450",NA,""
"1451",5,""
"1452",6,""
"1453",3,""
"1454",NA,""
"1455",NA,""
"1456",NA,""
"1457",5,""
"1458",NA,""
"1459",1,""
"1460",2,""
"1461",5,"We need portability best practices."
"1462",6,"Haven't had to do it much but seems relatively trivial."
"1463",1,""
"1464",4,""
"1465",1,""
"1466",6,""
"1467",1,""
"1468",1,""
"1469",NA,""
"1470",NA,""
"1471",7,""
"1472",6,"It is extremely important to me."
"1473",4,""
"1474",7,"its no brainer, very easy"
"1475",6,"Pretty damn easy with strawberry/activestate perl.  In fact, it's just as easy as with Java."
"1476",NA,""
"1477",1,""
"1478",NA,""
"1479",4,"Perl on Windows is getting better with Strawberry Perl, but can still sometime be a pain as some modules are to dependent a Unix environment."
"1480",1,""
"1481",1,"Running the same perl program across more than one platform (e.g. linux, mac os x windows) is easy[CR][CR]Not sure about Windows, but the rest seem to be easy."
"1482",NA,""
"1483",5,""
"1484",NA,""
"1485",NA,""
"1486",3,""
"1487",NA,""
"1488",5,""
"1489",6,"Although I find it unpleasant to code things for Windows, I generally have little difficulty running the same script on many platforms."
"1490",6,"I am still searching for a tool to find all dependencies of a project and create a Perl modules package needed to install the project togethe with all neede CPAN modules."
"1491",6,"Use strawberry."
"1492",5,""
"1493",6,"My biggest issue on cross platform is modules.  Linux machines generally have most of what I need already installed.  AIX and Solaris typically need to have the modules installed."
"1494",NA,""
"1495",6,""
"1496",1,""
"1497",NA,""
"1498",NA,""
"1499",4,""
"1500",NA,""
"1501",5,"Issues mostly have to do with cygwin path styles vs. MSDOS path styles and different perl distributions behaving differently with regard to default (non-:raw) file IO.  Also some issues with -r not working as expected with nt security."
"1502",6,"strawberry perl made my day and is getting better"
"1503",NA,""
"1504",NA,""
"1505",5,""
"1506",4,""
"1507",NA,""
"1508",4,""
"1509",NA,""
"1510",7,""
"1511",6,"Some cpan modules require additional system libraries, which are cross-platform, but it's a pain in the ass to compile them on Windows. "
"1512",1,"just wrote programs on linux yet"
"1513",NA,""
"1514",6,""
"1515",5,""
"1516",6,""
"1517",7,""
"1518",NA,""
"1519",6,""
"1520",5,""
"1521",4,"i dont like windows."
"1522",NA,""
"1523",6,"Perl makes it easy to write unportable code ($cmd = `which binary`) which is good to quickly write something but which is bad to force people to write portable code."
"1524",NA,""
"1525",6,"No comments"
"1526",NA,""
"1527",1,""
"1528",NA,""
"1529",NA,""
"1530",6,""
"1531",NA,""
"1532",5,"not as easy as it could be"
"1533",3,""
"1534",5,"It's one of very few decent alternatives."
"1535",NA,""
"1536",NA,""
"1537",NA,""
"1538",3,"ouch"
"1539",5,""
"1540",NA,""
"1541",4,""
"1542",3,""
"1543",1,""
"1544",2,""
"1545",5,""
"1546",NA,""
"1547",NA,""
"1548",5,""
"1549",NA,""
"1550",NA,""
"1551",NA,""
"1552",1,""
"1553",5,""
"1554",4,"different version in different platforms"
"1555",1,"Works rather well."
"1556",6,""
"1557",3,""
"1558",4,"Very useful feature."
"1559",1,"I install Perl modules from /usr/ports wherever possible, and occasionally send patches to update ports."
"1560",1,""
"1561",6,""
"1562",1,"I have tested things on Windows under Strawberry Perl, but I develop for and on Debian Linux, despite having Windows on my desktop. It's not the worst thing in the world, but different behaviour of operating systems sometimes cannot be masked -- ie, how in Unix/Linux a shebang line is used to indicate perl, whereas on Windows it's the file association (so scripts generally have the .pl extension)"
"1563",6,""
"1564",NA,""
"1565",5,""
"1566",NA,""
"1567",5,""
"1568",NA,""
"1569",5,""
"1570",6,""
"1571",3,""
"1572",5,"Mostly works. Windows is getting better with Strawberry."
"1573",6,""
"1574",NA,""
"1575",5,"Crossplatform coding is always complex task, and for real projects can not be easy. Perl help as it can for this."
"1576",1,""
"1577",NA,""
"1578",5,""
"1579",3,""
"1580",6,"I don't report bugs because it's very likely that it's just me doing something wrong."
"1581",NA,""
"1582",1,""
"1583",NA,""
"1584",6,""
"1585",1,""
"1586",5,""
"1587",1,""
"1588",1,""
"1589",1,""
"1590",NA,""
"1591",6,""
"1592",6,""
"1593",NA,""
"1594",5,""
"1595",NA,""
"1596",5,""
"1597",6,""
"1598",6,""
"1599",1,""
"1600",4,""
"1601",5,""
"1602",NA,""
"1603",6,"It would be easier if Windows didn't suck."
"1604",NA,""
"1605",NA,""
"1606",NA,""
"1607",NA,""
"1608",5,""
"1609",6,""
"1610",6,""
"1611",6,"I haven't encountered any problems"
"1612",1,"n/a. I'm a Linux boy"
"1613",6,""
"1614",6,"Better than any other programming language that I know"
"1615",6,""
"1616",NA,""
"1617",6,""
"1618",4,"this is often why I don't solve problems with Perl: I find a close match on CPAN, try to install it, and the tests fail. Then I curse, then I start from scratch in Python."
"1619",2,""
"1620",5,""
"1621",7,"It's rather simple, but there is a lack of low-level modules with the same functionality for different platforms with generalized interface"
"1622",NA,""
"1623",5,""
"1624",NA,""
"1625",1,""
"1626",6,"Thats required for any heavily used tools"
"1627",1,""
"1628",NA,""
"1629",6,""
"1630",6,""
"1631",5,""
"1632",NA,""
"1633",NA,""
"1634",4,""
"1635",5,"I have limited cross-platform experience. But at the workplace, people use a variety of development machines (OS X, Ubuntu, CentOS). Windows is not in the picture tho. We usually code close to our production environment."
"1636",1,""
"1637",NA,""
"1638",NA,""
"1639",4,""
"1640",6,""
"1641",5,""
"1642",5,""
"1643",1,""
"1644",3,"Core perl still has way too much Unix assumptions, including the docs."
"1645",6,"it works."
"1646",1,"I try to avoid it."
"1647",6,""
"1648",NA,""
"1649",NA,""
"1650",4,""
"1651",1,""
"1652",NA,""
"1653",7,""
"1654",4,"I haven't done any Perl on Windows in a couple of years, but I've constantly had problems with it when I did, related mostly to forks/threads and some filesystem problems."
"1655",NA,""
"1656",7,""
"1657",7,""
"1658",6,"Likewise with Java this is a main advantage of PERL for me."
"1659",5,""
"1660",NA,""
"1661",NA,""
"1662",6,""
"1663",NA,""
"1664",1,""
"1665",1,""
"1666",6,"Windows sucks! That's not perl's fault though."
"1667",5,"Insufficient number of modules were ported on Windows.[CR][CR]Some modules weren't packed into Debian/Ubuntu .deb packages or .rpm packages, so installing software on Linux meet with difficulties.[CR][CR]However, most of existing modules and functions works well in different platforms (except system-specific things, as fork() or Win32::API). Threads works ugly on all platforms ;)"
"1668",5,"I don't do much of it."
"1669",NA,""
"1670",NA,""
"1671",4,"Normally works nicely,[CR]with some modules it's a pain."
"1672",6,""
"1673",6,""
"1674",4,"It's difficult if you're managing large-ish farms of different OS/Kernels, and you have a bunch of CPAN modules which need to be compiled."
"1675",NA,""
"1676",6,""
"1677",3,""
"1678",7,"I always avoid using system calls, and go for CPAN modules instead. As a result my code is usually fine when run on a variety of platforms. "
"1679",NA,""
"1680",NA,""
"1681",NA,""
"1682",6,"Generally fine, lack of good free ODBC on UNIX can be a problem "
"1683",2,"it sux, especially in comparison to JVM languages and projects that almost always run with one command. As an example I tried 3 times to get perl and DBI working with MySQL on my Mac OSX with no success, I then turned to a framework in Groovy that would do the same job and it ran in 2 commands, I have never looked back."
"1684",NA,""
"1685",4,"Activestats ppm is a good way to install module but I think there should be something officially supported by perl community (ppm repositories) that makes it easier for us to install modules on windows"
"1686",NA,""
"1687",NA,""
"1688",NA,""
"1689",NA,""
"1690",6,""
"1691",1,""
"1692",NA,""
"1693",2,"CPAN sucks, and CPANP hardly makes it any better. Tests are a nice tool for developers, but usually break things for users for (what is usually) no reason."
"1694",5,""
"1695",NA,""
"1696",NA,""
"1697",NA,""
"1698",5,""
"1699",6,"I don't use windows, but mac to linux or vice versa seems to work very well"
"1700",5,""
"1701",5,""
"1702",1,""
"1703",NA,""
"1704",7,""
"1705",6,""
"1706",3,"C modules are always hard to manage."
"1707",NA,""
"1708",NA,""
"1709",5,""
"1710",NA,""
"1711",4,""
"1712",5,""
"1713",NA,""
"1714",6,""
"1715",5,"Difficulties tend to be in code that links to external libs"
"1716",NA,""
"1717",4,""
"1718",6,""
"1719",6,""
"1720",6,"It's good but not perfect, it can still use some work"
"1721",5,"This isn't a fault of Perl, but cross-platform issues tend to surface because of the programmers' own unfamiliarity / complacency towards other systems."
"1722",NA,""
"1723",5,"I don't run very many programs that need to run outside Linux anymore"
"1724",5,""
"1725",5,"possible but not very easy, especially unix/windows, would suggest to avoid."
"1726",1,"i try to use distributions packages instead of cpan, if not possible i work around it by using command line tools. management want to maintain separate update processes"
"1727",NA,""
"1728",1,""
"1729",5,"The world would be beautiful without Windows."
"1730",1,"I have only developed for Perl on Linux/BSD."
"1731",NA,""
"1732",6,""
"1733",7,"One of the best features of perl. "
"1734",5,""
"1735",NA,""
"1736",6,"Me like."
"1737",6,"Works great"
"1738",6,""
"1739",NA,""
"1740",NA,""
"1741",NA,""
"1742",5,""
"1743",NA,""
"1744",NA,""
"1745",6,""
"1746",7,""
"1747",NA,""
"1748",7,""
"1749",1,"I dislike activestate so I do not use perl for windows"
"1750",5,""
"1751",NA,""
"1752",NA,""
"1753",1,""
"1754",6,""
"1755",NA,""
"1756",NA,""
"1757",3,""
"1758",3,"Perl is pretty stronglyUnix oriented."
"1759",6,"MS Windows isn't POSIX/Unix"
"1760",NA,""
"1761",NA,""
"1762",NA,""
"1763",NA,""
"1764",NA,""
"1765",NA,""
"1766",5,""
"1767",6,""
"1768",1,""
"1769",NA,""
"1770",NA,""
"1771",6,""
"1772",6,""
"1773",6,""
"1774",5,"It mostly works, at least as well as anything else, mostly better."
"1775",6,""
"1776",3,"It's easy enough to presume some sort of Unix. Anything beyond that is where it gets tricky, in my experience."
"1777",NA,""
"1778",5,""
"1779",5,""
"1780",7,"This is the most amazing thing about Perl. Tested cross platform modules. "
"1781",6,""
"1782",NA,""
"1783",3,"Still hard to do a few things in Windows, but ActiveState rocks. I wish we had more money to give them. They deserve it, but we went with perl as an admin tool in the first place because we have no money."
"1784",1,""
"1785",NA,""
"1786",7,""
"1787",7,""
"1788",6,""
"1789",6,"It can be a pain getting scripts that weren't meant to be cross-platform (or ones that don't care about Windows) working on Windows. But it's easy enough to do for most things."
"1790",7,""
"1791",5,""
"1792",5,"The advent of Strawberry Perl is a welcome alternative to the Active State product."
"1793",NA,""
"1794",5,"Easy most of the time, if you know what NOT to do"
"1795",5,""
"1796",NA,""
"1797",6,""
"1798",NA,""
"1799",NA,""
"1800",NA,""
"1801",5,""
"1802",7,"Java claims to be cross-platform - But only runs on JVMs, Apps are suprinsingly unportable in practice: Write once, crash (almost) everywhere!  But with portable code, ported CPAN modules and PAR even cross-platform deployment is doable."
"1803",6,""
"1804",5,""
"1805",5,""
"1806",NA,""
"1807",NA,""
"1808",NA,""
"1809",1,""
"1810",3,""
"1811",6,""
"1812",NA,""
"1813",NA,""
"1814",5,""
"1815",NA,""
"1816",6,""
"1817",5,"It's generally easy to do, if you use the right modules and idioms."
"1818",NA,""
"1819",7,""
"1820",NA,""
"1821",7,"I thankfully can ignore windows. I am yet to have a problem with Linux <-> Mac compatibility."
"1822",NA,""
"1823",6,""
"1824",6,"Unfortunately, Windows is still not seen as a first-class citizen by many CPAN module writers."
"1825",NA,""
"1826",4,"perl is not that perfect for cross platform, but its also not bloacking it, that means the way is right, its just not still a big part to reach a beloved level."
"1827",6,""
"1828",6,""
"1829",NA,""
"1830",NA,""
"1831",NA,""
"1832",1,""
"1833",6,""
"1834",NA,""
"1835",NA,""
"1836",2,""
"1837",NA,""
"1838",NA,""
"1839",1,""
"1840",3,""
"1841",6,"I wish more people would program with portability in mind, but it's understandable that scripts grow organically, and something that gets shelled out un-portably isn't the end of the world."
"1842",7,"love it!"
"1843",5,""
"1844",1,""
"1845",1,""
"1846",NA,""
"1847",1,""
"1848",7,""
"1849",5,"I rarely have done it, but generally it hasn't had many issues."
"1850",NA,""
"1851",5,""
"1852",4,"Windows still needs to be supported better."
"1853",1,""
"1854",5,""
"1855",5,"tried to use a mac perl library to extract information from an iPhone. but the lib was only running on mac os."
"1856",NA,""
"1857",NA,""
"1858",7,""
"1859",5,"It gets harder the farther you move from the command line."
"1860",4,""
"1861",5,""
"1862",7,"It's fucking awesome."
"1863",7,""
"1864",1,""
"1865",5,""
"1866",4,""
"1867",NA,""
"1868",6,"Doing this on a day-to-day basis on the job. It's most convenient to abstract away the OS-specific stuff in some module and write the rest of the project not caring what it runs on."
"1869",6,""
"1870",6,""
"1871",NA,""
"1872",6,""
"1873",NA,""
"1874",6,""
"1875",4,""
"1876",5,""
"1877",4,"it's possible"
"1878",7,"The greatest advantage as far as I am concerned. Capital for my activity, and the main reason why I am using perl."
"1879",4,"Fork behavior on Windows still causes problems."
"1880",6,""
"1881",NA,""
"1882",NA,""
"1883",NA,""
"1884",NA,""
"1885",NA,""
"1886",2,""
"1887",6,""
"1888",6,""
"1889",NA,""
"1890",NA,""
"1891",1,""
"1892",6,""
"1893",4,""
"1894",5,""
"1895",7,"Perl is the second most prevalent cross-platform programming language (behind C)."
"1896",5,""
"1897",7,""
"1898",7,""
"1899",NA,""
"1900",6,"Works for me for what I do which is primarily ETL work. "
"1901",1,""
"1902",1,""
"1903",4,""
"1904",5,"For the most part cross-platform code I write works well; issues typically arise from incomplete implementations in CPAN packages."
"1905",6,"usually really easy. But really bad (and complex), of not..."
"1906",NA,""
"1907",NA,""
"1908",5,""
"1909",NA,""
"1910",6,"I've never tried Perl on Windows, but it's very portable across unix-like systems."
"1911",4,""
"1912",5,"Making sure file paths are portable kills me (yes, even with File::Spec, Path::Class). Tests are often a culprit."
"1913",NA,"No problem, unless I run into XS modules..."
"1914",5,"Windows and pre-X Mac are problematic. "
"1915",1,""
"1916",NA,""
"1917",NA,""
"1918",NA,""
"1919",NA,""
"1920",NA,""
"1921",NA,""
"1922",6,"Mostly flawless. "
"1923",6,""
"1924",NA,""
"1925",NA,""
"1926",NA,""
"1927",2,"Hah![CR]Fine as long as you don't want to actually run any programs or anything."
"1928",NA,""
"1929",1,""
"1930",6,"Cross platform Perl programming is relatively easy. Cross platform testing is a huge pain in the butt though."
"1931",6,""
"1932",NA,""
"1933",5,"Not needed to often, but never had issues when I have."
"1934",NA,""
"1935",6,""
"1936",5,"Fix threading. The only reason I mess with stuff like AnyEvent is that you can't do a multi-threaded network server."
"1937",6,""
"1938",NA,""
"1939",7,"Porting to JVM / CLR would be a miracle."
"1940",NA,""
"1941",5,"Definitely necessary, so users don't stumble over the little incompatibilities or bugs.  Alas the very valuable service of CPAN testers is frustrating, because I never got an answer when requesting failure details.  There should be access to the directory where the test failed, and a possibility to try patches there before deploying a new version to CPAN."
"1942",2,"If we had that WE would have a PVM and would have surpassed Java in popularity by now, even though we like far surpass them in platforms supported and in production code still running everywhere!"
"1943",4,""
"1944",7,""
"1945",NA,""
"1946",5,""
"1947",NA,""
"1948",1,""
"1949",7,"No, but I'd like to note that the multiselect widgets don't work on the iPad, so my survey answers may be incomplete."
"1950",1,""
"1951",5,""
"1952",4,""
"1953",1,""
"1954",1,""
"1955",5,"Between OS X and Linux, doesn't seem to be so bad."
"1956",7,""
"1957",NA,""
"1958",3,""
"1959",4,""
"1960",NA,""
"1961",5,""
"1962",5,""
"1963",7,""
"1964",NA,""
"1965",4,""
"1966",7,"Have never faced serious problems with it."
"1967",NA,""
"1968",NA,""
"1969",5,""
"1970",NA,""
"1971",7,""
"1972",6,"Out of the box Perl is perfect. CPAN modules somtimes make problems."
"1973",6,""
"1974",6,""
"1975",NA,""
"1976",4,"I find that packaging CPAN modules as Debian packages makes handling them rather easier than dealing with them through CPAN.pm.  As such, I really prefer to deploy to Debian or Ubuntu; platforms without dpkg support seem like a PITA by comparison."
"1977",NA,""
"1978",6,"Some gotchas on Windows with process control"
"1979",6,""
"1980",NA,""
"1981",6,""
"1982",1,""
"1983",6,"Strawberry Perl has satisfied almost all of my complaints.  ExtUtils::MakeMaker can disappear, however."
"1984",NA,""
"1985",1,""
"1986",3,"Perl portability is good, but it takes a lot of work to keep it that way."
"1987",3,""
"1988",6,""
"1989",6,"never had any issues across osx/linux/solaris"
"1990",3,""
"1991",5,"Things like working with processes could be more platform independant."
"1992",NA,""
"1993",5,"More people should be made aware of CPAN Reporter"
"1994",6,""
"1995",1,"I generally don't care about Windows, but do care about cross-unix."
"1996",3,"No different from cross platform Python programming."
"1997",4,""
"1998",NA,""
"1999",6,""
"2000",NA,""
"2001",7,""
"2002",6,""
"2003",5,""
"2004",NA,""
"2005",6,"That's not important feature for me, my portability requirements are limited by various *NIX platforms"
"2006",6,"Hooray for File::Spec"
"2007",NA,""
"2008",NA,""
"2009",NA,""
"2010",NA,""
"2011",NA,""
"2012",6,"it's a slight pain to (remember to) change the #! line when moving to another system. Sometimes even to find out the correct call"
"2013",NA,""
"2014",5,""
"2015",7,""
"2016",6,"Never run into problems"
"2017",6,""
"2018",NA,""
"2019",7,""
"2020",5,"Would be nice if good Perl/Qt GUI was standardly available. (Maybe this has changed since I last looked.)"
"2021",NA,""
"2022",6,""
"2023",6,""
"2024",7,""
"2025",6,""
"2026",7,""
"2027",NA,""
"2028",NA,""
"2029",6,""
"2030",NA,""
"2031",1,""
"2032",NA,""
"2033",NA,""
"2034",5,""
"2035",NA,""
"2036",7,""
"2037",7,"It's the best tool to do this."
"2038",NA,""
"2039",6,""
"2040",1,""
"2041",6,""
"2042",5,""
"2043",4,"it's almost impossible to install cpan modules on windows.[CR]very hard."
"2044",3,"Always necessary to modify code across platforms."
"2045",4,"Many of the FILE::Spec routines are generally broken at least on Windows and VMS and usually require special OS specific code before and/or after them to fix up the issues.  The most common issue is that these routines will unexpectedly convert a UNIX format input filespec into a native OS file specification that the rest of the Perl program does not know how to deal with.  These routines assume that conversion the from a Native file specification to Unix format is reversible, but it actually is not because of differences in the platforms.  The next most common bug is that they will incorrectly handle absolute and relative file specifications.[CR]It is a mess because a large number of Perl modules are now expecting these routines to behave exactly as they do now, but the way they actually work is not obvious to UNIX programmers who try to use them for portability.[CR]If you do a search of perl code for ""$^O"" tests, you will usually find them near a File::Spec method call or return to fix things up."
"2046",5,"Too much dependency on external OS tools, easily available on Linux, make it difficult to install it on certain platforms like AIX or Windows."
"2047",NA,""
"2048",NA,""
"2049",6,"I prefer to use the system's packaging (RPM, debs) instead of cpan to install dependencies. Easier for us to manage."
"2050",NA,""
"2051",1,""
"2052",NA,""
"2053",1,""
"2054",6,"I seldom need to.  I infrequently need to write programs on a Unix or Unix-like OS."
"2055",1,""
"2056",3,"Mac Os X frequently has problems especially when I try to install PerlMagick (followed by imagemagick).[CR]by the way, we really need a package that will manipulate images to the degree of imagemagick (ie. watermarking. Imager doesn't do that)"
"2057",5,""
"2058",1,""
"2059",5,""
"2060",NA,""
"2061",NA,""
"2062",6,""
"2063",NA,""
"2064",3,"much of what I do is system-dependent and is inherently not very cross-platform at all :-("
"2065",NA,""
"2066",NA,""
"2067",7,""
"2068",7,""
"2069",1,""
"2070",6,""
"2071",1,""
"2072",7,"WinXP and Ubuntu: portability is often full"
"2073",NA,""
"2074",6,"how about a ${^PATH_SEP} perlvar. I don't like File::Spec."
"2075",6,""
"2076",NA,""
"2077",NA,""
"2078",7,""
"2079",4,""
"2080",5,""
"2081",3,"its Windows fault."
"2082",NA,""
"2083",5,"So long as you use modules that are not OS specific (Like the Win ones) you're usually fine.  "
"2084",3,""
"2085",1,""
"2086",6,""
"2087",6,""
"2088",6,""
"2089",NA,""
"2090",6," I don't do it that often."
"2091",5,"I didn't find any problems with Solaris SPARC and X86"
"2092",1,""
"2093",5,""
"2094",1,""
"2095",7,"Just works!"
"2096",NA,""
"2097",7,"I've never had that many issue but the code I write isn't usually more than a few hundred lines... if that."
"2098",4,"I hate windows, so I try not to stress too much about it"
"2099",4,""
"2100",NA,""
"2101",1,""
"2102",NA,""
"2103",NA,""
"2104",NA,""
"2105",5,""
"2106",5,"cross platform introduces new things to take care of... it's natural you can't get everything for free!"
"2107",NA,""
"2108",4,"getting modules that contain XS stuff installed and executable on platforms such as HP-UX or AIX often is a challenge and pretty time consuming (time I often lack for my other chores),[CR]I suppose that is because there aren't that many CPAN testers who use these platforms, but fortunately (thanks to Linux and virtualization) these old irons will soon become extinct..."
"2109",6,""
"2110",NA,""
"2111",3,""
"2112",6,"I have been surprised at how few problems I have had jumping between platforms."
"2113",NA,""
"2114",NA,""
"2115",NA,""
"2116",NA,""
"2117",1,""
"2118",5,""
"2119",5,""
"2120",1,""
"2121",5,"I like the fact that I can get perl everywhere. For my use it is not very important that the same program can be used unmodified everywhere, but that [CR]I can program more or less the same way in different systems. I hardly ever leave unixes or similar OSes, though."
"2122",5,"can't say much, I go from *nix to *nix to *nix, not really that different"
"2123",5,""
"2124",6,""
"2125",6,"Perl does a good job of this"
"2126",7,""
"2127",5,"wxWidgets will help in development of UI of cross platform applications. Webserver stuff is easily portable. And yes, todays servers are all running at virtual machines, so this fact is valuable in talk about portability too."
"2128",1,"Haven't tried it."
"2129",4,""
"2130",1,""
"2131",6,""
"2132",1,""
"2133",NA,""
"2134",NA,""
"2135",6,""
"2136",3,""
"2137",NA,""
"2138",NA,""
"2139",NA,""
"2140",6,""
"2141",3,"it's a big bucket of pain"
"2142",2,"it sucks"
"2143",1,""
"2144",6,""
"2145",NA,""
"2146",7,""
"2147",6,""
"2148",5,"I think the testing culture (and the fact that we do it just before install) is one of Perl's strongest points."
"2149",6,"it's as platform independent as java is - they both call themself that way, but are not"
"2150",NA,""
"2151",3,""
"2152",NA,""
"2153",NA,""
"2154",NA,""
"2155",1,""
"2156",NA,""
"2157",NA,""
"2158",4,""
"2159",NA,""
"2160",5,"depends on the program"
"2161",NA,""
"2162",NA,""
"2163",1,"I don't use others code."
"2164",NA,""
"2165",NA,""
"2166",6,"very good job"
"2167",1,""
"2168",1,"No experience, but based on experience with other dynamic languages, Cygwin vs. Windows path handling is always a pain. Not sure if Perl can actually handle that."
"2169",6,"Math::Pari is terrible."
"2170",NA,""
"2171",6,""
"2172",7,""
"2173",NA,""
"2174",1,""
"2175",1,""
"2176",6,""
"2177",1,""
"2178",7,"easier than anything else I know of"
"2179",6,""
"2180",5,"I never do GUI, just data transform"
"2181",5,""
"2182",NA,""
"2183",4,""
"2184",2,"I have had endless trouble with CPAN on Mac OS X; I literally cannot use the default CPAN client (I use cpanm instead)."
"2185",1,""
"2186",7,""
"2187",NA,""
"2188",NA,""
"2189",NA,""
"2190",7,"as of activeperl - not all is working"
"2191",5,""
"2192",5,""
"2193",6,""
"2194",NA,""
"2195",6,""
"2196",7,""
"2197",NA,""
"2198",NA,""
"2199",1,""
"2200",NA,""
"2201",6,"Generally pretty easy, except when scripts depend on hard coded paths like /tmp/"
"2202",1,""
"2203",1,""
"2204",NA,""
"2205",6,""
"2206",6,""
"2207",6,""
"2208",5,""
"2209",4,""
"2210",NA,""
"2211",NA,""
"2212",1,""
"2213",4,""
"2214",NA,""
"2215",NA,""
"2216",5,""
"2217",NA,""
"2218",5,"Perl programming is more enjoyable in Linux"
"2219",1,"if tests fail I usually don't use the module."
"2220",3,"It works fairly well across all the unix-like operating systems.  I've never tried it on windows."
"2221",1,""
"2222",6,""
"2223",7,""
"2224",7,""
"2225",7,"It's about as simple as pie. Very easy."
"2226",NA,""
"2227",6,""
"2228",5,""
"2229",4,""
"2230",5,"There is still some potential to improve, no doubt."
"2231",6,""
"2232",6,""
"2233",5,""
"2234",NA,""
"2235",NA,""
"2236",1,""
"2237",6,"I develop on a slackware box, then upload to Windows XP/Strawberry Perl when necessary.[CR] "
"2238",NA,""
"2239",6,""
"2240",3,""
"2241",5,""
"2242",3,"Most of my Perl programs run well on both Linux and Solaris, but I have troubles running them on Windows."
"2243",5,"Happy when we can do it at sll"
"2244",6,""
"2245",NA,""
"2246",5,""
"2247",6,""
"2248",4,"Had to support a system that run Oracle Application Server under Windows once. Was a nightmare to install those CPAN modules that required compliation."
"2249",6,""
"2250",6,"I regularly develop on OSX and deploy on Linux. Between these two platforms I've not had an issue in several years."
"2251",NA,""
"2252",1,""
"2253",NA,""
"2254",2,"Fix the file interface on windows so one can access unicode file names!  It's useless."
"2255",5,"Characters in the utf-8 set constantly get messed up, unless I take great care to avoid it."
"2256",NA,""
"2257",NA,""
"2258",NA,""
"2259",NA,""
"2260",NA,""
"2261",4,""
"2262",6,"So far I have been using very ripe packages and language features resp., so it has been a pleasant experience"
"2263",7,"It's so easy I don't even think about it anymore? :-)"
"2264",7,""
"2265",7,"often insane/pain to compile on cygwin/windows, due to missing debian-style apt-get libs workflow (hand-download, tweak the source etc)"
"2266",5,"Easy in theory, not too difficult in practice, just a matter of thinking a bit (exception: GUI and system programming, and native libraries ...)"
"2267",5,"Rarely issues moving between Linux and Unix. Uncommon between Linux and Mac OS X. Have never tried to move big apps from Linux to Windows -- not many problems with short scripts though."
"2268",NA,""
"2269",6,""
"2270",NA,""
"2271",2,""
"2272",NA,""
"2273",5,""
"2274",NA,""
"2275",6,""
"2276",4,""
"2277",NA,""
"2278",5,""
"2279",5,""
"2280",6,""
"2281",5,"It's easier if you plan for it ahead of time. Harder if not."
"2282",5,""
"2283",7,""
"2284",5,""
"2285",NA,""
"2286",1,""
"2287",5,""
"2288",NA,""
"2289",3,"""If tests fail I will try to report a bug through appropriate channels"" - would be good if some URL or contact could be listed in results to make this contact easier."
"2290",4,"It's much easier with tools such as PAR, but these have not been widely adopted."
"2291",1,""
"2292",NA,""
"2293",NA,""
"2294",6,"good"
"2295",6,""
"2296",6,"Windows is the odd one out, Interix via SFU/SUA should be more popular (it provides a real fork on windows)"
"2297",6,"How easy it is really depends on what you're doing, obviously. Basic stuff is pretty simple, but the devil's in the details, so a more complex program can get messy."
"2298",5,""
"2299",5,"no, it works fine cross-platform, that's not one of Perl problems.. it has others."
"2300",NA,""
"2301",1,""
"2302",7,""
"2303",2,""
"2304",1,""
"2305",1,""
"2306",NA,""
"2307",4,"Usually I'm doing system stuff anyway, where I'd expect things to fail."
"2308",NA,""
"2309",NA,""
"2310",NA,""
"2311",6,"Cross platform takes thought and the use of CPAN modules.  Writing your own methods is likely to fail."
"2312",NA,""
"2313",NA,""
"2314",2,""
"2315",6,""
"2316",6,""
"2317",6,""
"2318",6,""
"2319",7,"does not rely too heavily on platform specific tools."
"2320",7,"wery good"
"2321",5,""
"2322",4,""
"2323",5,""
"2324",6,"Cygwin was missing from the list of OSs. But $OSNAME disagrees!"
"2325",6,""
"2326",NA,""
"2327",NA,""
"2328",5,"It has gotten better in the last decade."
"2329",5,""
"2330",7,"If Perl wasn't cross platform, I wouldn't be using it.  It's a very important point."
"2331",1,""
"2332",6,""
"2333",1,""
"2334",6,""
"2335",NA,""
"2336",5,""
"2337",4,""
"2338",NA,""
"2339",NA,""
"2340",NA,""
"2341",1,""
"2342",NA,""
"2343",4,"If a module doesn't work on one platform but does on another, I consider running ActiveState perl to get it running, for whatever reasons it seems their modules run more often than not."
"2344",7,""
"2345",6,"We don't use windows, so interop between GNU/Linux and OS X is fairly straight forward."
"2346",NA,""
"2347",1,"Sometimes I have to install a module on a solaris system with an improperly configured toolchain.  That's not much fun."
"2348",6,""
"2349",5,"Have no experience with it."
"2350",NA,""
"2351",1,""
"2352",NA,""
"2353",6,""
"2354",NA,""
"2355",1,""
"2356",NA,""
"2357",4,"It's getting better!  Graphic toolkits and dependencies on system libraries need to be tested a bit more, though."
"2358",4,""
"2359",6,"Althoug it usually is really easy migrating from *NIX to *NIX, when it fails, it fails terribly hard."
"2360",1,""
"2361",1,""
"2362",6,""
"2363",NA,""
"2364",6,"I generally use OpenBSD and put modules into their ports structure so most modules are tested on the platform by someone else.[CR][CR]It is fairly easy to program in a cross platform way, but you can also run into places where platform dependent things are the correct solution."
"2365",NA,""
"2366",5,"not as good as Java!"
"2367",6,""
"2368",6,"It's a lifesaver"
"2369",4,""
"2370",6,"I build on mac os x and deploy on debian linux and generally have very few problems."
"2371",1,""
"2372",NA,""
"2373",5,""
"2374",7,""
"2375",NA,""
"2376",7,"using a lot of appropriate modules instead of built-in features makes multi-platform easy (e.g. Path::Class)"
"2377",6,""
"2378",6,""
"2379",1,""
"2380",1,"there are systems besides linux?"
"2381",NA,""
"2382",6,"there are a few gotchas... but generally, portability is very good"
"2383",NA,""
"2384",NA,""
"2385",4,""
"2386",1,""
"2387",1,""
"2388",1,""
"2389",NA,""
"2390",6,""
"2391",NA,""
"2392",6,"Perl delivers on the cross-platform ""write once, run anywhere"" claims that Java makes but fails to deliver on."
"2393",1,""
"2394",NA,""
"2395",5,""
"2396",NA,""
"2397",NA,""
"2398",6,""
"2399",NA,""
"2400",5,"not all modules are available"
"2401",1,""
"2402",NA,""
"2403",NA,""
"2404",6,""
"2405",NA,""
"2406",NA,""
"2407",6,""
"2408",NA,""
"2409",7,""
"2410",NA,""
"2411",1,""
"2412",NA,""
"2413",5,"ActivePerl's binary package archive sucks.  I had far better luck just installing Visual C++ Express Edition and building everything myself with CPAN.pm."
"2414",NA,""
"2415",6,""
"2416",6,""
"2417",3,"/me bangs head on table"
"2418",6,""
"2419",NA,""
"2420",6,"There's been a few cases I would have loved to work with some CPAN threading modules but couldn't because their was no win32 equivalent. But in general, it more or less just ""works""."
"2421",4,"mostly with windows, lack of portability, permissions."
"2422",7,"I never try windows."
"2423",NA,""
"2424",1,""
"2425",7,""
"2426",NA,""
"2427",NA,""
"2428",5,"It is really hard to program Perl on Windows, mostly because of the intricate details of building DLLs that work properly, but also because so many CPAN authors neglect Windows as a viable platform for anything and don't care if their modules work on it or not."
"2429",5,""
"2430",6,"It's one of the strongest features of Perl."
"2431",NA,""
"2432",6,""
"2433",5,"hope adam kennedy will able to build his cpan tester based on PITA."
"2434",7,""
"2435",5,""
"2436",NA,""
"2437",7,""
"2438",6,""
"2439",NA,""
"2440",1,""
"2441",7,"My biggest frustration is installing the required modules on each machine, but I know there are tools and such out there to make that easier, I just haven't used them."
"2442",7,"I run my code on Linux and Windows"
"2443",NA,""
"2444",NA,""
"2445",5,"Cross-unixen is 100% easy, unix-windows requires some attention to detail"
"2446",NA,""
"2447",6,""
"2448",1,""
"2449",NA,""
"2450",NA,""
"2451",NA,""
"2452",NA,""
"2453",7,""
"2454",5,""
"2455",1,""
"2456",NA,""
"2457",6,""
"2458",5,"Some packages require external libraries that don't perform the same under each platform, e.g. threading/multiplexing/etc... libraries"
"2459",1,""
"2460",1,""
"2461",3,""
"2462",6,""
"2463",6,"In my company I have found no problems in writing cross-platform Perl.  The only problems I have had are with dissimilar environments which do not have the same modules or versions of Perl what can accommodate the same modules."
"2464",NA,""
"2465",6,"Provided you do a little homework on the platforms you deploy to, cross-platform programming isn't that diffucult in Perl."
"2466",3,""
"2467",NA,""
"2468",NA,""
"2469",NA,""
"2470",4,""
"2471",NA,""
"2472",NA,""
"2473",NA,""
"2474",NA,""
"2475",6,""
"2476",1,""
"2477",6,""
"2478",NA,""
"2479",1,""
"2480",NA,""
"2481",6,""
"2482",5,"Windows sucks! even BeOS is better than Windows, I supposed that that is MS. problem and not perl :)"
"2483",4,"Pathing is a pain in the A** between *nix and Win."
"2484",4,"Sometimes simple but installation can be wonky."
"2485",1,""
"2486",6,"no problems exept handling with office-documents via perl"
"2487",1,"Never tried it, wouldn't dare to."
"2488",4,""
"2489",NA,""
"2490",NA,""
"2491",NA,""
"2492",5,"File::Spec makes it a lot easier, but it's no just copy over and run for most things.[CR][CR]Lack of pre-compiled binary bundles and differing module systems (base CPAN vs. PPM) and the lack of a portable way to bring those dependencies with a program hurts even moving to another machine of the same platform let alone a different one."
"2493",7,""
"2494",NA,""
"2495",6,"Works pretty well cross *nix, haven't tried in with Windows or MAC.[CR]"
"2496",5,"fine, don't use it much"
"2497",NA,""
"2498",NA,""
"2499",5,""
"2500",5,"try not to use platform-specific modules"
"2501",5,""
"2502",NA,""
"2503",5,""
"2504",3,""
"2505",NA,""
"2506",NA,""
"2507",NA,""
"2508",NA,""
"2509",4,"wibble"
"2510",5,""
"2511",1,""
"2512",6,"Years ago, this was a pain with Windows. No recent experience."
"2513",1,""
"2514",1,""
"2515",6,""
"2516",7,""
"2517",NA,""
"2518",1,""
"2519",1,""
"2520",1,""
"2521",NA,""
"2522",5,""
"2523",NA,""
"2524",1,""
"2525",5,""
"2526",NA,""
"2527",NA,""
"2528",5,""
"2529",6,"The major problem is that the expected behavior differs between platform; eg. do we need/want a GUI?"
"2530",5,""
"2531",4,""
"2532",5,""
"2533",6,""
"2534",6,"dependence on external binary libraries make portability difficult in some cases, but pure perl code is most likely to run smooth on any platform"
"2535",1,""
"2536",NA,""
"2537",NA,""
"2538",5,""
"2539",NA,""
"2540",NA,""
"2541",5,""
"2542",1,""
"2543",4,""
"2544",4,"Windows is arse."
"2545",NA,""
"2546",1,""
"2547",NA,""
"2548",5,""
"2549",1,""
"2550",6,"Requires experience like knowing the right modules, but works fine.[CR]"
"2551",NA,""
"2552",5,""
"2553",2,""
"2554",3,""
"2555",2,"i've had terrible experiences with GUI part. since i needed that on windows it was easier to ditch windows."
"2556",NA,""
"2557",NA,""
"2558",NA,""
"2559",NA,""
"2560",4,""
"2561",1,""
"2562",6,""
"2563",5,""
"2564",5,""
"2565",4,"Just because you can, doesn't mean you should! =)"
"2566",6,""
"2567",5,"windows is hardest to port to"
"2568",6,""
"2569",1,"In my current line of work as in house system developer anything but Linux is completely irrelevant."
"2570",7,"I think Strawberry Perl is a great tool for Windows programmers (and Perl programmers in general)."
"2571",6,"Installation sometimes fails."
"2572",NA,""
"2573",1,""
"2574",6,""
"2575",6,""
"2576",6,"I use Linux in 99.9% time and Perl in Linux JustWorks(tm)."
"2577",5,"We in the Windows perl dev world are the red headed step children, but as I am told many times this is just one more reason to switch to linux."
"2578",6,""
"2579",NA,""
"2580",NA,""
"2581",4,"I can say that I don't consider Perl a real portable solution (unfortunately) because I do the development under Windows and use the programs in production under Linux and I often have problems with some modules that can't run under Windows so I can't test them, or modules that can be installed harder under differnt operating systems."
"2582",NA,""
"2583",2,"Perl would do well to have an Application::Build tool like Module::Build where you can install things easily in a cross-platform manner."
"2584",6,""
"2585",4,""
"2586",6,""
"2587",4,""
"2588",1,""
"2589",5,""
"2590",NA,""
"2591",NA,""
"2592",6,""
"2593",NA,""
"2594",NA,""
"2595",1,"Nope"
"2596",NA,""
"2597",NA,""
"2598",4,""
"2599",NA,""
"2600",5,""
"2601",NA,""
"2602",NA,""
"2603",NA,""
"2604",NA,""
"2605",NA,""
"2606",NA,""
"2607",1,""
"2608",6,"Works surprisingly well."
"2609",6,""
"2610",6,"I think PAR is really helpful in such cases."
"2611",NA,""
"2612",1,""
"2613",1,""
"2614",3,"easy if you stick to well known modules, but you have have to be carefull when using new modules."
"2615",4,""
"2616",1,""
"2617",7,""
"2618",1,""
"2619",NA,""
"2620",5,""
"2621",NA,""
"2622",6,""
"2623",5,""
"2624",7,"It mostly just works.  File::Spec->join() should probably have syntactic sugar."
"2625",3,"I have never tried."
"2626",6,""
"2627",4,""
"2628",1,""
"2629",6,""
"2630",5,""
"2631",7,""
"2632",NA,""
"2633",NA,""
"2634",5,""
"2635",4,""
"2636",5,"It is wonderful, but sometimes certain CPAN modules are not compatible even though they should be."
"2637",NA,""
"2638",NA,""
"2639",4,""
"2640",NA,""
"2641",4,"It depends on what you're doing"
"2642",1,""
"2643",6,""
"2644",NA,""
"2645",3,"Strawberry Perl has been a huge blessing, but the inability to sensibly package an application *and* the dependencies is a huge downfall of Perl.[CR][CR]PAR and FatPacker are cute, but not really sufficient, to address this."
"2646",5,"It's pretty easy with ActiveState, and almost impossible otherwise."
"2647",NA,""
"2648",5,""
"2649",6,""
"2650",6,""
"2651",6,""
"2652",5,"Most of the issue is getting certain modules to compile on different platforms."
"2653",NA,""
"2654",NA,""
"2655",6,""
"2656",NA,""
"2657",NA,""
"2658",1,""
"2659",NA,""
"2660",5,""
"2661",7,""
"2662",6,""
"2663",NA,""
"2664",6,""
"2665",NA,""
"2666",1,""
"2667",NA,""
"2668",1,"Tie my kangaroo down"
"2669",5,""
"2670",NA,""
"2671",4,""
"2672",1,""
"2673",1,""
"2674",5,"It hurts less than C."
"2675",NA,""
"2676",NA,""
"2677",1,""
"2678",NA,""
"2679",5,""
"2680",1,""
"2681",NA,""
"2682",NA,"Good to have the cpan, installation will be seamless as well."
"2683",NA,""
"2684",NA,""
"2685",6,""
"2686",NA,""
"2687",6,""
"2688",7,""
"2689",6,"It works well."
"2690",5,"Different platforms have different large integers..."
"2691",6,"I have fairly basic needs, but I have never had any problems running perl cross-platform."
"2692",NA,""
"2693",4,""
"2694",1,""
"2695",6,""
"2696",6,""
"2697",2,""
"2698",6,"Works good except on Windows."
"2699",2,""
"2700",5,"surprisingly easy (even compiled perl)"
"2701",7,"All of my programming is cross platform (on Unix-like platforms) so this ability is important to me."
"2702",1,""
"2703",2,"It is still quite hard to migrate Perl projects written in Linux to Windows, as it is not so easy to compile the Packages.pm and things tend to break in weird ways. (At least in my experience)"
"2704",5,""
"2705",1,""
"2706",NA,""
"2707",5,""
"2708",NA,""
"2709",3,""
"2710",5,""
"2711",NA,""
"2712",3,""
"2713",NA,""
"2714",6,""
"2715",3,""
"2716",5,""
"2717",6,""
"2718",NA,""
"2719",6,"best i have used (at least better than java :p)"
"2720",6,""
"2721",NA,""
"2722",1,""
"2723",4,""
"2724",4,""
"2725",NA,""
"2726",4,""
"2727",1,""
"2728",NA,""
"2729",5,""
"2730",5,""
"2731",6,"Every CPAN test that has failed for me has done so because the programmer made platform assumptions.  Too often, programmers are not interested in hearing about platforms they do not use.  This tends to discourage bug reports."
"2732",6,""
"2733",NA,""
"2734",NA,""
"2735",3,""
"2736",7,""
"2737",2,"Nearly everything I try to write depends upon at least one module that won't work on Windows. The fact isn't too surprising, as Windows is a profoundly developer-hostile platform, but it *is* a pain."
"2738",4,"only if perl embedded to an crossplatform application."
"2739",7,"Its easy to write one Source and run under VMS,Liunx and windows"
"2740",7,"nothing, we need more support for Windows user"
"2741",NA,""
"2742",NA,""
"2743",6,""
"2744",NA,""
"2745",5,"File::Spec needs to die.  Java is dramatically better in this area"
"2746",5,""
"2747",5,"Many useful modules are tied to libraries available only on selected platforms, therefore complex programs are often not portable"
"2748",1,""
"2749",NA,""
"2750",6,""
"2751",3,""
"2752",NA,""
"2753",NA,""
"2754",1,""
"2755",6,"thanks :-D"
"2756",5,""
"2757",NA,""
"2758",1,""
"2759",5,""
"2760",5,""
"2761",5,"Path::Class rocks?  OTOH we run Linux and Mac OS X desktops, so we don't have to worry about this as much."
"2762",NA,""
"2763",6,"The strongest point. However, the module writer needs to be experienced to avoid small traps."
"2764",NA,""
"2765",NA,""
"2766",NA,""
"2767",NA,""
"2768",6,""
"2769",NA,""
"2770",6,""
"2771",4,"Well, it's not hard, but it's also not hard to write non-portable code. One needs to be aware of a lot of stuff."
"2772",NA,""
"2773",NA,""
"2774",NA,""
"2775",5,"I've experienced great results developing on cygwin and deploying to AIX. So I'm generally happy."
"2776",6,""
"2777",7,"Using things like File::Spec or Path::Class make cross-platform programming easier."
"2778",6,""
"2779",1,""
"2780",5,"As long as application doesn't use OS specific features - it's easy. But when it comes to real production applications - almost all are built with use of specific OS advantages... And it usually still easy to port from one *nix to another."
"2781",NA,""
"2782",6,""
"2783",2,""
"2784",1,""
"2785",6,""
"2786",NA,""
"2787",5,""
"2788",6,"Usually Just Works{TM}, except when Windows screws things up."
"2789",5,"I've had good experiences running scripts written in Linux under Windows, for the most part. My only real issue has been setting up DBD::Oracle (which is a pain in any environment, really). Once setup is complete, everything typically works, though, so I'm happy."
"2790",5,""
"2791",4,""
"2792",4,""
"2793",5,""
"2794",6,""
"2795",NA,""
"2796",3,""
"2797",6,"Generally I have had excellent success running cross-platform scripts with Perl -- much more so than with Java (write once, run nowhere).  The only problems I have had tend to be with modules that have extensive or complicated native dependencies, such as DBD::Oracle."
"2798",7,"Perl is the most write-once run-anywhere language I've dealt with."
"2799",4,"[it] ""is like a dog walking on his hind legs. It is not done well;[CR]but you are surprised to find it done at all.""  Johnson, July 31, 1763"
"2800",NA,""
"2801",NA,""
"2802",1,""
"2803",6,""
"2804",3,"Crossing the unix/windows boundary isn't straightforward. "
"2805",NA,""
"2806",5,"If there was any consistency between windows interpreters, it'd be easier... I *just* had to go thru finding some port, any port, that would run Device::Serialport with POE.  Ended up with cygwin."
"2807",6,"Don't often have to do it, but when I need to, CPAN rarely lets me down."
"2808",5,"Will try strawberry perl next. ActiveState Perl is pita sometimes."
"2809",3,"hate M$, but many people might be trying it...[CR]Would like more on Mobile platforms, but have to develop my own environment,[CR]for example OLPC XO for embedded use...[CR]I'd like more modules and stuff to work on 64 bit..."
"2810",1,""
"2811",5,""
"2812",NA,""
"2813",6,""
"2814",NA,""
"2815",NA,""
"2816",NA,""
"2817",6,""
"2818",4,"Cross platform, for me, also implies a certain lack of control over which modules and versions are installed."
"2819",1,""
"2820",6,""
"2821",NA,""
"2822",6,""
"2823",NA,""
"2824",1,""
"2825",NA,""
"2826",1,""
"2827",5,""
"2828",7,""
"2829",4,""
"2830",NA,""
"2831",NA,""
"2832",NA,""
"2833",NA,""
"2834",NA,""
"2835",NA,""
"2836",4,"You will not make any bananas that way!"
"2837",NA,""
"2838",NA,""
"2839",NA,""
"2840",5,"Most of the time there are no problems. Usually the problems are with the dependencies."
"2841",1,""
"2842",4,"Almost sure my programs need porting to run on Windows which is a pity, mostly because of CPAN modules.[CR]"
"2843",6,"Works great in Perl; usually doesn't make a difference where I tested/wrote."
"2844",6,""
"2845",6,"Perl is more portable across platforms than versions (e.g. 5.6 vs 5.8)."
"2846",5,""
"2847",5,""
"2848",6,"The necessity of 'make' in module installation causes issues under Windows since most Windows users don't have a make (or nmake, dmake ...) on their systems.  Strawberry Perl helps, but not everybody uses Strawberry.  This can be an issue on Macs, as well, if they don't have the Developer Tools installed."
"2849",5,"I very rarely have the opportunity (not sure if that's the right word) to run perl programs on non-UNIX platforms."
"2850",6,""
"2851",NA,""
"2852",NA,""
"2853",NA,""
"2854",NA,""
"2855",6,""
"2856",5,""
"2857",NA,""
"2858",NA,""
"2859",3,""
"2860",6,""
"2861",6,""
"2862",NA,""
"2863",7,""
"2864",7,""
"2865",1,"it would be cool, but I never tried"
"2866",6,""
"2867",NA,""
"2868",7,""
"2869",NA,""
"2870",NA,""
"2871",4,""
"2872",7,""
"2873",5,""
"2874",4,"Lots of things work well across multiple platforms; the exceptions, however, are very annoying!"
"2875",6,"Win32::Clipboard on Windows is very useful."
"2876",6,"I don't usually do things that are fancy enough to run into cross-platform problems (except UNIX vs. DOS nvs. Mac newlines!)"
"2877",6,""
"2878",6,""
"2879",NA,""
"2880",1,""
"2881",NA,""
"2882",6,"It's great except for Windows path/device issues."
"2883",6,"i avoid windows, so it's pretty easy"
"2884",5,"Unix-isms easy to slip into Perl programs (goodness in some contexts) make many programs unportable to Microsoft Windows"
"2885",7,""
"2886",NA,""
"2887",5,""
"2888",NA,""
"2889",NA,""
"2890",2,""
"2891",6,"It works for me."
"2892",5,"I don't really do windows."
"2893",1,""
"2894",6,""
"2895",6,""
"2896",NA,""
"2897",NA,""
"2898",NA,""
"2899",1,"If your project is more complicated than ""Hello world!"" it could quite hard to maintain. It applies to any programming language."
"2900",6,"Use IPC::System::Simple; PJF deserves an award for that one.  It makes running things on Windows actually reliable."
"2901",6,""
"2902",NA,""
"2903",NA,""
"2904",5,""
"2905",6,""
"2906",5,""
"2907",1,""
"2908",1,""
"2909",6,""
"2910",4,""
"2911",NA,""
"2912",6,""
"2913",1,""
"2914",NA,""
"2915",7,"While I don't maintain our local CPAN setup, I've frequently written code on our servers, run it on my local OSX machine, on a different remote Linux machine, etc.  It's very well done."
"2916",1,""
"2917",5,""
"2918",5,""
"2919",1,""
"2920",5,"Bundling using PAR should get more usability/documentation/DWIM support."
"2921",4,""
"2922",5,""
"2923",5,"its better than most languages "
"2924",NA,""
"2925",5,"I do not use any platforms other then Linux, therefore this is not a concern for me."
"2926",5,""
"2927",6,"it is overrated, only mac users/developers need it"
"2928",NA,""
"2929",6,""
"2930",4,"OS-X and Linux are fine - Windows (with which I did not have so much experience yet) made me some headache."
"2931",5,"CPAN doesn't integrate too well with package managers."
"2932",NA,""
"2933",6,""
"2934",6,""
"2935",NA,""
"2936",4,"Biggest headache for me is deployment of code to different platforms"
"2937",NA,""
"2938",1,""
"2939",NA,""
"2940",2,""
"2941",NA,""
"2942",7,"Works very well"
"2943",1,""
"2944",NA,""
"2945",NA,""
"2946",3,""
"2947",7,""
"2948",NA,""
"2949",5,""
"2950",1,""
"2951",6,""
"2952",1,""
"2953",6,"I don't write or maintain cross applications but I have ported Perl applications across platforms.  As far as cross platform applications are to port or maintain, Perl lies between Java and C/C++.  When I did port applications they required a minimal amount of updating.  But that speaks more to the skill of the programmer than the language."
"2954",7,"It has gotten quite better since I started using perl.  "
"2955",6,""
"2956",7,""
"2957",NA,""
"2958",NA,""
"2959",NA,""
"2960",6,""
"2961",NA,""
"2962",NA,""
"2963",NA,""
"2964",NA,""
"2965",7,""
"2966",6,""
"2967",6,""
"2968",3,"Most useful libraries tend to have binary dependencies. The libraries are often available although sometimes"
"2969",6,""
"2970",5,"If tests fail I usually assume a config issue on the server rather than a bug that needs to be reported.[CR][CR]Strawberry Perl has taken the pain out of installations on windows (although I still hit more issues on windows than on linux)"
"2971",NA,""
"2972",NA,""
"2973",NA,""
"2974",NA,""
"2975",NA,""
"2976",7,""
"2977",1,""
"2978",5,""
"2979",NA,""
"2980",1,"All Linux, all the time."
"2981",6,""
"2982",6,"Make things as easy for yourself as possible. Use Path::Class for path/filename manipulations will save pain. Strawberry took a lot of the pain out of the toolchain!"
"2983",2,""
"2984",1,""
"2985",NA,""
"2986",NA,""
"2987",NA,""
"2988",5,"Organization's use of Win32::Semaphore and Win32::Process makes that more difficult than it should be."
"2989",4,""
"2990",6,"Once you get it, it is easy"
"2991",6,""
"2992",5,""
"2993",NA,""
"2994",1,""
"2995",5,""
"2996",3,"No problems so long as modules don't use compiled code, in which case porting can be a nightmare (looking at you, GD::Graph)"
"2997",1,""
"2998",6,""
"2999",6,""
"3000",NA,""
"3001",NA,""
"3002",NA,""
"3003",7,"One of the nicer features of Perl, it just works. Well, except for some child processing and forking stuff, but since POE accepted my patches for Windows, that is less of a problem these days."
"3004",NA,""
"3005",NA,""
"3006",NA,""
"3007",NA,""
"3008",6,""
"3009",6,"We routinely deploy on freebsd, solaris, windows and linux, and actually deploy our own version of perl (a'la Strawberry) which includes all of the CPAN modules we require as well as those inhouse modules (with xs bindings). It's a breeze."
"3010",NA,""
"3011",5,""
"3012",1,""
"3013",NA,""
"3014",5,""
"3015",6,""
"3016",NA,""
"3017",6,""
"3018",6,""
"3019",6,""
"3020",NA,""
"3021",4,""
"3022",5,"Don't do much of it."
"3023",NA,""
"3024",5,""
"3025",3,"Perl / CPAN on OS X doesn't seem to work as well as perl/cpan on Linux. I found that with Tiger/Leopard, not sure if the issue is resolved with Snow Leopard"
"3026",NA,""
"3027",1,""
"3028",6,""
"3029",4,""
"3030",3,""
"3031",3,"Focusing on Apache2 dev on LInux these days.  Have assumed pre-fork for programming model, might rule out Windows Apache."
"3032",NA,""
"3033",1,""
"3034",4,""
"3035",NA,""
"3036",6,""
"3037",6,"Minimize the use of the system or exec commands.  "
"3038",5,""
"3039",NA,""
"3040",1,"Never wanted to try.  Never needed to try."
"3041",6,""
"3042",NA,""
"3043",6,""
"3044",1,"I hear good things about Strawberry -- something similar should be done for Mac: most Mac+Perl users I know have incredibly horrible Perl installations."
"3045",1,""
"3046",6,"Most times it works fine, but some CPAN modules can be a PITA to get them running under a different OS."
"3047",1,""
"3048",4,""
"3049",1,""
"3050",1,""
"3051",1,""
"3052",6,"Thanks to the compiler developers for maintaining and testing perl."
"3053",1,""
"3054",NA,""
"3055",6,""
"3056",NA,""
"3057",NA,""
"3058",3,"'system perl library' paths are problematic.  It would be a lot easier if there were better instructions on things like local::lib and deploying your own perl interpreter."
"3059",6,""
"3060",NA,""
"3061",7,"most of my work is light and x-platform"
"3062",4,""
"3063",5,""
"3064",6,""
"3065",NA,""
"3066",NA,""
"3067",6,""
"3068",1,"That is not something I normally have to deal with.  When I have though I let CPAN testing site tell me what went wrong."
"3069",6,""
"3070",NA,""
"3071",5,"I don't believe its nessecary that a package runs cross platform, but it should be acknowledged what its designed to work with. Perl testers doesn't satisfy this as tests (or lack thereof) can pass where the module will fail. This is a question of design intention, and that stepping outside of that design invites potential trouble."
"3072",6,"3"
"3073",5,""
"3074",6,""
"3075",NA,""
"3076",6,""
"3077",5,""
"3078",1,"I use Perl only on Solaris and Linux platforms. On Windows I use either Python (because of the Python for Windows environment) or Jscript/VBScript to play well with cscript.exe."
"3079",6,""
"3080",1,""
"3081",NA,""
"3082",NA,""
"3083",NA,""
"3084",NA,""
"3085",1,""
"3086",6,""
"3087",4,""
"3088",1,""
"3089",NA,""
"3090",NA,""
"3091",1,""
"3092",7,"almost platform independent."
"3093",6,""
"3094",NA,""
"3095",6,""
"3096",NA,""
"3097",NA,""
"3098",1,""
"3099",4,""
"3100",6,""
"3101",1,""
"3102",NA,""
"3103",5,""
"3104",1,""
"3105",NA,""
"3106",NA,""
"3107",NA,""
"3108",6,""
"3109",5,"Don't we all love windows..."
"3110",NA,""
"3111",4,""
"3112",6,""
"3113",1,""
"3114",6,""
"3115",5,"Perl itself is normally quite good. It's often cygwin that gets in my way."
"3116",6,""
"3117",NA,""
"3118",5,"good work on Strawberry perl"
"3119",NA,""
"3120",NA,""
"3121",4,"Any of the unix OSs work just fine. I don't use Perl on windows very often."
"3122",2,""
"3123",6,""
"3124",5,"I am still working on making my applications less Unix-specific."
"3125",5,""
"3126",6,"perl is great, except on windows, but everything else sucks on windows anyways."
"3127",6,"Hard to deal with unicode files names in Windows."
"3128",NA,""
"3129",NA,""
"3130",6,"I don't do much of it."
"3131",6,""
"3132",NA,""
"3133",6,""
"3134",NA,""
"3135",4,""
"3136",4,"packaging should become better"
"3137",6,""
"3138",NA,""
"3139",5,""
"3140",NA,""
"3141",6,""
"3142",6,""
"3143",5,""
"3144",1,""
"3145",4,""
"3146",NA,""
"3147",7,""
"3148",4,"We need better support for local CPAN installs and sand-boxed installs of perl modules vs CPAN defaults to global install / user install -- this makes it hard to just take a module / script dir and install it some where else, because you cant also take (easily) it's CPAN module dependencies.  Outside of cpan modules needed, basic perl support cross-platform is WONDERFULLY supported.  But remember, CPAN is the language (thank you Devel::Declare)..."
"3149",6,""
"3150",NA,""
"3151",3,"That's hard as many CPAN modules are not multiplatform."
"3152",4,""
"3153",1,""
"3154",NA,""
"3155",5,""
"3156",NA,""
"3157",1,"Did active perl a few years back, was a bit annoying for lack of libraries I like using in linux."
"3158",6,""
"3159",NA,""
"3160",5,"Strawberry Perl with cpan is big step over ActiveState.  Still get caught out far too much on silly file naming conventions."
"3161",NA,""
"3162",NA,""
"3163",NA,""
"3164",NA,""
"3165",1,""
"3166",1,""
"3167",NA,""
"3168",6,""
"3169",NA,""
"3170",3,"Until you try to do a fork it's great. Threading in Perl SUCKS on Windows, and forking works just about as well, so there is usually a large amount of rewriting in those cases."
"3171",5,"I never have much problem on unix variants.  When I did windows Perl programming, it never really felt ""natural"""
"3172",NA,""
"3173",NA,""
"3174",5,""
"3175",NA,""
"3176",2,"Threads are not portable nor easy. Perl assumes you're a Unix programmer a lot. We need to generalize interfaces a bit :)"
"3177",4,""
"3178",NA,""
"3179",1,""
"3180",4,"Needed better unicode support for windows, especially for console programs. Needed better handling of locale encodings in windows. Needed some layer of abstraction to async programming (timers, run code with some intervals, interrupting code for some time and e.t.c. maybe something like in JS), no signals (or there must be alternative) to my mind it's ugly. Needed regexps with ansi locale support (/i modifier e.t.c.). Needed ""data dumping"" internal command. It's not clear how to contact with developers. And much more =("
"3181",6,""
"3182",1,""
"3183",6,""
"3184",6,""
"3185",NA,""
"3186",5,""
"3187",7,"besides a few minor issues here and there, perl is best cross platform language out there.  I have code written in perl that I run in production environment of a fortune 500 company that runs on windows, linux, solaris, and custom unix.  All the same code with almost no ""if on platform # do else do "" type coding.  And it runs great on all platforms."
"3188",2,""
"3189",5,""
"3190",6,""
"3191",NA,""
"3192",6,""
"3193",6,""
"3194",1,""
"3195",5,""
"3196",4,""
"3197",NA,""
"3198",NA,""
"3199",7,""
"3200",5,"It had issues with MS Windows implementation of fork and signals. It was quite trivial on Linux/Unix to create the program that reads asynchronous stream and handles/parses/presents it, but to do the same on MS Windows I had to sweat a lot."
"3201",1,""
"3202",1,""
"3203",5,"Nice for little scripts, not so great for big, specialized projects."
"3204",6,"Strength!"
"3205",6,""
"3206",6,""
"3207",NA,""
"3208",7,""
"3209",4,""
"3210",6,""
"3211",NA,""
"3212",NA,""
"3213",2,"That is real fun ;-)"
"3214",7,""
"3215",NA,""
"3216",NA,""
"3217",7,""
"3218",6,""
"3219",NA,""
"3220",NA,""
"3221",5,""
"3222",1,"I never program perl in Windows. I will use something like WinSCP if I need to use a windows editor, or just use putty to ssh into a Linux environment."
"3223",NA,""
"3224",NA,""
"3225",6,""
"3226",4,"Wouldn't it be wonderful to have a good threading model?"
"3227",NA,""
"3228",NA,""
"3229",NA,""
"3230",5,""
"3231",6,"Portability is very good. That an accomplishment for a lang that is not afraid to leverage the system api, unlike java.  I can leverage all that unix provides and be confident that there is a good chance its going to port."
"3232",5,""
"3233",NA,""
"3234",NA,""
"3235",5,""
"3236",5,"problems with ActiveState 8.10 (no Gtk, ImageMagic Builds need no more available AS binaries...)[CR]when separate system perl (package system controlled) from dev perl (manually installed, using CPAN) its fine, but costs strict discipline[CR]Tk works fine[CR]strawberry rulz[CR]"
"3237",5,"Generally pretty good, no real complaints."
"3238",6,""
"3239",NA,""
"3240",1,""
"3241",NA,""
"3242",7,"very easy :)"
"3243",5,""
"3244",5,""
"3245",6,""
"3246",5,""
"3247",1,""
"3248",NA,""
"3249",6,""
"3250",6,"(some of the select choices for this survey do not appear to work for the iPhone. For example, operating systems -- mac and ubuntu for me -- and editor/IDE -- emacs for me. ) "
"3251",3,""
"3252",7,"As stated in the manual, perl itself is fundamentally portable--it's when one wants to interact with system resources (filesystems, sockets, etc.) that the Ivory Tower starts to erode. "
"3253",5,"perl is fairly good for cross platform programming, if you avoid platform-specific things such as shell escapes, literal '/' to join pathnames, etc."
"3254",NA,""
"3255",NA,""
"3256",6,""
"3257",6,"windows sucks"
"3258",5,"There are some snags, but it works fine most of the time.  Often enough to be less of an issue."
"3259",NA,""
"3260",6,""
"3261",1,""
"3262",5,""
"3263",6,""
"3264",1,""
"3265",5,""
"3266",1,""
"3267",3,"Sometimes ist takes days to get it fixed on other plattforms :-("
"3268",6,""
"3269",6,""
"3270",NA,""
"3271",NA,""
"3272",NA,""
"3273",5,""
"3274",NA,""
"3275",5,""
"3276",6,""
"3277",7,""
"3278",6,""
"3279",4,""
"3280",1,""
"3281",5,"I haven't done much cross platform Perl, but as long as modules are available for both platforms the code tends to be rather portable."
"3282",NA,""
"3283",NA,""
"3284",5,"[CR]"
"3285",6,""
"3286",NA,""
"3287",5,""
"3288",NA,""
"3289",3,"Tough luck, doesn't work most times."
"3290",1,"Basically never tried it."
"3291",NA,""
"3292",NA,""
"3293",1,"I don't do any"
"3294",NA,""
"3295",1,""
"3296",NA,""
"3297",6,"is easy if you setup your env carefully, not easy if you just use the perl that comes with the box"
"3298",6,""
"3299",6,""
"3300",NA,""
"3301",2,"Windows Perl is so hard to deal with, threading, files, etc"
"3302",6,""
"3303",6,""
"3304",NA,""
"3305",5,""
"3306",6,""
"3307",7,""
"3308",5,"Most of my cross-platform programming involves using some module, probably networking-related like DBI. If the module works, my code will work. I don't have any particularly unix habits in my programming style."
"3309",4,""
"3310",6,""
"3311",6,""
"3312",NA,""
"3313",4,"a noble feature"
"3314",NA,""
"3315",5,"It all depends on how complex the program is, and how platform specific the application is.  An app that calls a lot of Win32 system calls for example, would be very difficult to code to be cross-platform.  I don't even try, as a rule.  I write for the target platform."
"3316",5,""
"3317",NA,""
"3318",NA,""
"3319",NA,""
"3320",NA,""
"3321",1,"I don't do it."
"3322",6,"Windows is sometimes problematic for various reason."
"3323",6,"Suprisingly good compliance (comparable or better than Java!)"
"3324",1,""
"3325",NA,""
"3326",7,"In general works fairly well, but has some issues."
"3327",NA,""
"3328",6,""
"3329",5,""
"3330",NA,""
"3331",1,""
"3332",6,"Always try to write code for multi-platform use."
"3333",NA,""
"3334",NA,""
"3335",5,"Strawberry perl and variants is a linchpin in cross-platform perl programming."
"3336",1,""
"3337",NA,""
"3338",5,""
"3339",NA,""
"3340",NA,""
"3341",6,""
"3342",7,""
"3343",NA,""
"3344",NA,""
"3345",6,""
"3346",3,""
"3347",7,""
"3348",6,""
"3349",6,""
"3350",NA,""
"3351",3,"Anyone who does this could waste less time doing it another way."
"3352",1,""
"3353",6,""
"3354",NA,""
"3355",6,"I haven't had any problems with it, but if I'm going cross platform I'm more likely to use Python or Java."
"3356",1,""
"3357",NA,""
"3358",4,""
"3359",NA,""
"3360",NA,""
"3361",4,"I've never had to work on stuff that needs to run on Windows. My little experience of using Perl on Windows was a bit painful"
"3362",6,"It's easier if you knew up front that you might need to do it.  Conversely, when you use platform-specific stuff you're stuck there.  Pays yer money, takes yer choice."
"3363",NA,""
"3364",7,"It's amazing how well it works."
"3365",3,"Gets hard once the code reaches a certain complexity."
"3366",6,"only as long there is no OS specific code (networking, filesystem, GUI)"
"3367",NA,""
"3368",7,""
"3369",NA,""
"3370",1,""
"3371",1,""
"3372",6,""
"3373",5,"I really love perl programming on linux.  Not so much fun on windows as I don't have enough time and inclination to figure out the activestate mumbo jumbo for getting the right packages installed."
"3374",5,"It really depends upon the program's dependencies. There are times where a dependency does not exist on the Microsoft platform, outside of installing Cygwin. This I will not do simply to run a program, nor do I expect general users to perform also."
"3375",NA,""
"3376",NA,""
"3377",6,"It's much harder than in e.g. Python because we don't have any batteries included. If you want to write portable Perl you often have to resort to hacks that you wouldn't have to in Python, e.g. shelling out to OS utilities."
"3378",6,"Wx is the key"
"3379",1,""
"3380",4,"Serial port handling across platforms is awful."
"3381",NA,""
"3382",NA,""
"3383",4,""
"3384",6,"it is a good thing"
"3385",6,""
"3386",NA,""
"3387",6,""
"3388",NA,""
"3389",5,"code that only depends on the Perl core, and is written with portability in mind, is easy; badly-written code is hard; code that depends on external libraries is near-impossible"
"3390",6,"easy"
"3391",NA,""
"3392",NA,""
"3393",6,""
"3394",6,"I learnt perl because it ran on linux and windows.  To me it's very important."
"3395",4,"I have almost no experience with this.  I occasionally try to get some perl running on a windows machine for one-off stuff under cygwin shell, but most all of my coding for fun or profit is on linux. (debian, ubuntu, and centos)"
"3396",5,""
"3397",NA,""
"3398",7,""
"3399",6,""
"3400",5,"I've run into a host (iBiblio) that, at least at one point, didn't have flock running on their BSD server; it would have been very difficult to code around that.  This was several years ago; I don't know if it would still be true."
"3401",NA,""
"3402",7,"The hardest part about getting things to run cross-platform is getting in contact with CPAN authors, even when you have ready-made patches."
"3403",NA,""
"3404",4,"Works fine across Unices (including Mac OS X), but not so fine with Windows."
"3405",1,""
"3406",NA,""
"3407",NA,""
"3408",4,""
"3409",1,"Not enough experience. 99.9% linux, never multiple."
"3410",5,""
"3411",6,""
"3412",2,"If it's not Unix-like, it won't work. Of course, that's true even without talking about perl."
"3413",4,""
"3414",3,""
"3415",NA,""
"3416",1,"I try to stay on *nix for my programming."
"3417",1,""
"3418",5,""
"3419",6,"as long as its unix everything is fine"
"3420",1,""
"3421",6,""
"3422",NA,""
"3423",6,""
"3424",NA,""
"3425",NA,""
"3426",6,"glad it works as well as it does."
"3427",NA,""
"3428",6,""
"3429",6,"I do not use CPAN"
"3430",5,"it's easy to get it 90% right, but the last bit can be tricky"
"3431",NA,""
"3432",6,""
"3433",6,""
"3434",NA,""
"3435",6,""
"3436",1,""
"3437",6,""
"3438",1,""
"3439",6,""
"3440",5,""
"3441",6,"It's not too difficult as long as the programmer is aware."
"3442",6,"It's awesome."
"3443",3,"Perl itself works fairly well, but not all CPAN modules will install cleaning on other platforms."
"3444",NA,""
"3445",6,""
"3446",NA,""
"3447",NA,""
"3448",6,""
"3449",NA,""
"3450",5,""
"3451",NA,""
"3452",1,""
"3453",6,""
"3454",5,""
"3455",6,"Sometimes, I wish path handling and OS-tasks were first class, built in functions that were encouraged in basic tutorials, so I didn't have to constantly fix applications when moving across platforms."
"3456",NA,""
"3457",5,""
"3458",4,""
"3459",5,""
"3460",4,"Perl makes it mercifully easy to do."
"3461",NA,""
"3462",6,""
"3463",6,""
"3464",NA,""
"3465",NA,""
"3466",7,""
"3467",6,"File::Spec is quite helpful."
"3468",1,""
"3469",7,""
"3470",NA,""
"3471",5,""
"3472",6,""
"3473",5,""
"3474",NA,""
"3475",4,""
"3476",6,""
"3477",NA,""
"3478",NA,""
"3479",1,""
"3480",NA,""
"3481",6,"I wish vendors like HP, IBM put newer versions of Perl on their Unix'es"
"3482",1,""
"3483",NA,""
"3484",NA,""
"3485",5,""
"3486",6,""
"3487",5,"depends on the quality of the programmer!"
"3488",4,""
"3489",6,"greap portability"
"3490",NA,""
"3491",7,""
"3492",5,""
"3493",NA,""
"3494",NA,""
"3495",NA,""
"3496",NA,""
"3497",7,"Perl is extremely cross-platform.  In my experience, much easier to deploy on languages designed for cross-platform deployment than Java."
"3498",NA,""
"3499",NA,""
"3500",NA,""
"3501",NA,""
"3502",NA,""
"3503",3,""
"3504",NA,""
"3505",NA,""
"3506",6,"I have somewhat limited experience with this, but I did develop applications on my Macbook but deployed and used in Linux environments."
"3507",2,"I don't do much, but I still haven't got Padre running on Mac OS X Snow Leopard."
"3508",6,""
"3509",5,""
"3510",6,""
"3511",6,""
"3512",NA,""
"3513",NA,""
"3514",NA,""
"3515",1,""
"3516",1,""
"3517",5,""
"3518",NA,""
"3519",6,""
"3520",NA,""
"3521",6,""
"3522",3,"I've spent days trying to get things working between Windows and unix.  Mainly related to fork() handling, or lack thereof.  It's not Perl's fault, of course."
"3523",1,""
"3524",6,"I don't usually care about Windows as a platform, but my one foray into programming for the general public (tkrow.sourceforge.net) resulted in my switching to Python because it includes a GUI toolkit, whereas Perl does not."
"3525",NA,""
"3526",6,"Most of those feel more like ""never/always"" questions than ""agree/disagree"" ones. I filled them in as such, anyway.[CR][CR]The most frequent failing tests I've gone through the hassle of debugging were locale-unawareness.[CR]"
"3527",6,""
"3528",6,"Generally very straightforward. Package management is the hardest problem."
"3529",NA,""
"3530",4,""
"3531",NA,""
"3532",5,""
"3533",NA,""
"3534",NA,""
"3535",6,"usually works pretty well, and is getting better with strawberry perl etc"
"3536",5,""
"3537",7,"Strawberry is brilliant."
"3538",NA,""
"3539",6,""
"3540",NA,""
"3541",1,""
"3542",3,""
"3543",7,"It's unbelievably easy.  It's the biggest reason we've stuck with Perl for so long."
"3544",NA,""
"3545",6,"Cross platform on Unix-ish environment is usually not a problem.[CR][CR]Unix to windows can be a bit of a pain."
"3546",NA,""
"3547",5,""
"3548",5,"Generally I only run stuff under Ubuntu and OS X.  This works for me because I install a custom local Perl on my Mac.  Otherwise, it's a pain."
"3549",6,""
"3550",7,""
"3551",1,"I access my perl scripts over smb, works pretty well :3"
"3552",NA,""
"3553",6,""
"3554",4,""
"3555",NA,""
"3556",NA,""
"3557",NA,""
"3558",5,"thank God for Adam Kennedy & Reini Urban"
"3559",NA,""
"3560",2,"We are a shop split between linux and win32.  The win32 stuff generally isn't a problem but there are a surprising amount of modules out there that do silly things to preclude usage on windows; like doing `rm foo` etc."
"3561",5,""
"3562",7,""
"3563",6,"very fine, is definitly needed"
"3564",6,"Perl programs which need hook into other systems tend to use system(), which obviously limits portability."
"3565",NA,""
"3566",6,""
"3567",6,""
"3568",4,"disk paths will kill you, and it's not Perl's fault."
"3569",NA,""
"3570",NA,""
"3571",NA,""
"3572",1,""
"3573",NA,""
"3574",5,"Ruby to the rescue."
"3575",2,"All the code we write at work runs on Linux and Mac OS X as the developers are free to choose which they use. In that respect cross platform perl programming has been easy.[CR][CR]However we use a lot of UNIX-y ""stuff"" like forking, symlinks, etc, so I doubt that the code would run on Windows successfully."
"3576",NA,""
"3577",5,""
"3578",NA,""
"3579",6,""
"3580",6,""
"3581",6,"There are minor changes we've had to make to convert between platforms, but nothing big."
"3582",4,""
"3583",NA,""
"3584",NA,""
"3585",3,"Frankly, PERL has built in so many UNIXisms that it is hopeless to expect just any module to work. Thanks to those contributors who test on Windows and other platforms, especially Mac; but it is a challenge to get most CPAN projects running on VMS. This should improve with the next major release of VMS this summer, but it will still be challenging. Again, thanks to anyone who has helped to get Perl CPAN modules running on VMS; appreciated."
"3586",7,"Since Strawberry Perl became mature (and relocatable) windows is much easier to work with, even in locked down environments."
"3587",NA,""
"3588",5,""
"3589",4,""
"3590",5,""
"3591",NA,""
"3592",6,"Management feels target users are uncomfortable enough with a command line, never mind installing modules, so I am often asked to write within the capacities provided by core modules (or at least ActiveState).[CR][CR]Have had trouble with ActivePerl -- UTF-16 encoder broken."
"3593",1,""
"3594",NA,""
"3595",7,"Generally easy. For GUIs, tcl/tk is getting long in the tooth, but there's also WxWidget."
"3596",6,""
"3597",5,""
"3598",6,"I've had minimal experience but the few times I've had multiple platforms involved, the programs worked similarly and without issues."
"3599",6,""
"3600",NA,""
"3601",6,"Perl on Windows sucks."
"3602",6,""
"3603",5,""
"3604",NA,""
"3605",6,""
"3606",1,""
"3607",1,""
"3608",NA,""
"3609",NA,""
"3610",6,""
"3611",5,""
"3612",NA,""
"3613",NA,""
"3614",NA,""
"3615",5,""
"3616",1,"None."
"3617",2,""
"3618",5,""
"3619",NA,""
"3620",5,""
"3621",7,"Fantastic!"
"3622",6,""
"3623",NA,""
"3624",NA,""
"3625",NA,""
"3626",7,""
"3627",6,"It generally ""just works"" in my experience, unless you're dealing with antiquated systems, i.e. Solaris 5.8."
"3628",5,""
"3629",5,""
"3630",NA,""
"3631",1,""
"3632",6,"RHEL -> HPux easy for medium size application 10000 lines of code"
"3633",NA,""
"3634",1,""
"3635",NA,""
"3636",NA,""
"3637",NA,""
"3638",5,"It is easy iff the modules that you use have author(s) that care about cross platform programming.[CR][CR]If the module assumes you are on a *nix type system it can be hard to get it working on windows."
"3639",1,"."
"3640",NA,""
"3641",1,""
"3642",NA,""
"3643",6,"I have had no issues between OS X and Linux. Have never dealt with perl on Windows."
"3644",NA,""
"3645",5,""
"3646",1,"None"
"3647",NA,""
"3648",NA,""
"3649",NA,""
"3650",1,""
"3651",5,"The biggest hitch is distribution - in particular, installing system libraries/headers needed by CPAN modules.  Better integration of CPAN.pm/CPANPLUS with native packaging systems is needed."
"3652",NA,"If Perl stays betwwen Unix like, that's fine. Altoght, different plattaforms have different specificities."
"3653",NA,""
"3654",7,"Check CPAN before implementing any"
"3655",NA,""
"3656",6,""
"3657",NA,""
"3658",1,""
"3659",5,"it's generally fine as long as you use cross platform packages and avoid system/backticks calls..."
"3660",NA,""
"3661",NA,""
"3662",NA,""
"3663",NA,""
"3664",5,""
"3665",6,""
"3666",NA,""
"3667",5,""
"3668",5,""
"3669",NA,""
"3670",NA,""
"3671",6,""
"3672",5,"Don't really do it, but it seems possible as longs as you pick modules available on all platforms and stay away from some pitfalls with file / system management..."
"3673",5,"Wx (mattia) needs more help to solve issues under certain platforms"
"3674",1,""
"3675",5,""
"3676",1,""
"3677",1,""
"3678",6,""
"3679",5,"It's not as easy as it could be, but it's not Perl's fault. OS package management makes it hard to choose dependencies that will work on all platforms. OSX is particularly nasty since the OS relies on older Perl 5.8.."
"3680",6,"It's usually quite painless to deal with any platform issues that crop up.  There are Perl modules that provide enough syntactic aide to get you through platform issues, and a quick Google search usually helps me find the right thing to do."
"3681",NA,""
"3682",1,"don't bother, run it on linux"
"3683",5,""
"3684",NA,""
"3685",NA,""
"3686",6,"Nice when it works, frustrating when it doesn't"
"3687",6,""
"3688",4,"Me no like."
"3689",NA,""
"3690",NA,""
"3691",3,""
"3692",5,""
"3693",5,"Hm not for Windows "
"3694",6,""
"3695",1,""
"3696",4,""
"3697",1,""
"3698",NA,""
"3699",3,""
"3700",2,"n/a for me"
"3701",5,""
"3702",3,""
"3703",7,"we smoke test our perl modules daily running commands like:[CR]mmk test  /macro=(INST_LIB=[],INST_ARCHLIB=[])   ! on VMS[CR]make test INST_LIB=. INST_ACRHLIB=.              # on Linux[CR]"
"3704",6,""
"3705",NA,""
"3706",6,""
"3707",5,""
"3708",6,""
"3709",NA,""
"3710",5,""
"3711",NA,""
"3712",NA,""
"3713",1,""
"3714",1,""
"3715",5,""
"3716",7,"In the early days, Perl compatibility across multiple linux platforms,[CR]happened to be much better than the even the basic csh/sh/bash shells."
"3717",6,""
"3718",NA,""
"3719",NA,""
"3720",1,""
"3721",NA,""
"3722",7,"Life saver."
"3723",5,""
"3724",6,""
"3725",5,""
"3726",6,""
"3727",NA,""
"3728",1,"The reason I picked N/A above is that it depends. For most stuff including GUIs 'Strongly Agree' is the answer. If you need peculiar OS interaction the answer is 'Disagree'."
"3729",6,""
"3730",4,""
"3731",6,"easier than most"
"3732",NA,""
"3733",6,""
"3734",6,""
"3735",1,""
"3736",NA,""
"3737",NA,""
"3738",3,""
"3739",5,""
"3740",NA,""
"3741",3,""
"3742",1,""
"3743",4,""
"3744",5,""
"3745",NA,""
"3746",4,"Installation on Linux is often flawless, however, where I really need the help, on Windows, test often bomb out. "
"3747",6,""
"3748",6,""
"3749",NA,""
"3750",1,""
"3751",6,"Is good the problem is the CPAN dependencies like C libs."
"3752",6,"file separator is different between OP systems"
"3753",2,""
"3754",6,""
"3755",NA,""
"3756",6,""
"3757",5,""
"3758",5,""
"3759",6,""
"3760",NA,""
"3761",5,""
"3762",2,"Dynamic language often are an hassle for cross-platform"
"3763",NA,""
"3764",NA,""
"3765",4,""
"3766",NA,""
"3767",NA,""
"3768",NA,""
"3769",6,""
"3770",NA,""
"3771",5,""
"3772",4,""
"3773",7,""
"3774",6,""
"3775",5,""
"3776",NA,""
"3777",6,"cross platform perl programming is very easy without GUI."
"3778",1,"I've never had the need - I only target linux."
"3779",6,""
"3780",6,""
"3781",5,""
"3782",NA,""
"3783",4,"Working with processes is not portable which is a pain.  Perl is very unix-y which is nice unless you need to work with Windows."
"3784",NA,""
"3785",6,""
"3786",5,""
"3787",6,""
"3788",6,""
"3789",7,""
"3790",4,""
"3791",3,"You have to keep in mind the differences between your systems core when building an application in any language.  Perl is a little more constrained on that due to Problems with library portability."
"3792",1,""
"3793",1,""
"3794",NA,""
"3795",6,""
"3796",NA,""
"3797",NA,""
"3798",NA,""
"3799",6,""
"3800",1,""
"3801",NA,""
"3802",5,""
"3803",NA,""
"3804",NA,""
"3805",4,"It depends what you're trying to do."
"3806",NA,""
"3807",5,""
"3808",6,""
"3809",6,"32-bit and 64-bit libraries sometimes make things tricky"
"3810",6,""
"3811",NA,""
"3812",6,"As a Unix programmer, Perl was my first choice when I had to write an app for Windows.  Worked very well."
"3813",NA,""
"3814",6,""
"3815",NA,""
"3816",5,""
"3817",1,"I only use Linux."
"3818",4,""
"3819",NA,""
"3820",NA,""
"3821",NA,""
"3822",6,""
"3823",1,""
"3824",5,""
"3825",NA,""
"3826",5,""
"3827",1,""
"3828",6,"compiling XS modules not so easy on some platform."
"3829",6,""
"3830",5,""
"3831",5,""
"3832",NA,""
"3833",NA,""
"3834",5,"Remember that cross-platform also means portability over DBMSs, where applicable, and not just over operating systems.  DBMSs are the second-biggest platform lock-in besides OSs."
"3835",5,""
"3836",3,"windows support is quite bad"
"3837",6,""
"3838",NA,""
"3839",NA,""
"3840",7,"I rarely use platforms other than Linux."
"3841",NA,""
"3842",5,""
"3843",4,""
"3844",1,""
"3845",5,""
"3846",NA,""
"3847",NA,""
"3848",4,""
"3849",NA,""
"3850",1,""
"3851",5,"it depends on the program and used modules."
"3852",6,""
"3853",6,""
"3854",5,""
"3855",6,"We need Strawberry Perl Professional for Linux, Solaris and Mac to make it easy to deploy cross platform."
"3856",5,""
"3857",5,""
"3858",NA,""
"3859",5,""
"3860",4,""
"3861",NA,""
"3862",4,""
"3863",NA,""
"3864",4,""
"3865",NA,""
"3866",6,""
"3867",1,""
"3868",6,""
"3869",6,""
"3870",5,"A nice standard lib way to access paths on windows identical to unixes would be nice. A perl::critic type plugin (may already exist) to warn about non-windows-friendly code like dropping to shell, not specifying binmode in handling files, using symlink stuff and different style carriage returns."
"3871",NA,""
"3872",1,""
"3873",5,"poor to non-existent support on mobile platform."
"3874",4,""
"3875",1,""
"3876",6,""
"3877",NA,""
"3878",6,""
"3879",NA,""
"3880",4,""
"3881",NA,""
"3882",4,""
"3883",NA,""
"3884",5,""
"3885",NA,""
"3886",6,""
"3887",6,""
"3888",NA,""
"3889",6,""
"3890",6,"Works!"
"3891",1,"a necessity"
"3892",NA,""
"3893",5,""
"3894",3,""
"3895",NA,""
"3896",NA,""
"3897",6,"I do not use it very much, but I appreciate that it ""just works""."
"3898",1,"planned to do in near future (for private use: linux/windows)"
"3899",NA,""
"3900",4,""
"3901",6,"I just make sure the CPAN modules I need are in place on every platform."
"3902",NA,""
"3903",6,""
"3904",NA,""
"3905",NA,""
"3906",NA,""
"3907",NA,""
"3908",1,""
"3909",NA,""
"3910",NA,""
"3911",5,"Windows is horrible"
"3912",5,""
"3913",5,""
"3914",5,""
"3915",2,""
"3916",5,"I do not care for Windows much, so this question does not concern me."
"3917",NA,""
"3918",5,"My dream is that some day exists a runtime-environment for each platform that can execute bytecode-compiled perl programs from any other platform. Like in Java![CR]"
"3919",5,""
"3920",5,"Mostly, it's easy.  Easier than any other language I've tried.  ActiveState does a great job of making CPAN modules available for Windows environments where a C/C++ build environment may not be available.  I wish it were that easy for OS X."
"3921",1,""
"3922",6,"CPAN testers notifications should be checked for redundancy. One notice that code doesn't work with bleedperl on the notoriously craptastic Win32 platform is sufficient."
"3923",5,"We have scripts that run across both linux and Unix just fine at my employment. I have not faced too many problems in my home/personal time with perl when it comes to cross-platform programming/execution either."
"3924",5,"need to be careful with file system separators.[CR]"
"3925",7,""
"3926",4,"too many modules require a c compiler"
"3927",6,""
"3928",5,""
"3929",NA,""
"3930",5,""
"3931",5,""
"3932",7,""
"3933",NA,""
"3934",6,"Running the same perl program across more than one platform (e.g. linux, mac os x windows) is easy, provided that the program is written to be cross-platform."
"3935",NA,""
"3936",1,""
"3937",1,""
"3938",5,""
"3939",1,""
"3940",NA,""
"3941",NA,""
"3942",7,""
"3943",3,""
"3944",1,""
"3945",5,"it works :)"
"3946",NA,""
"3947",NA,""
"3948",NA,""
"3949",1,""
"3950",NA,""
"3951",5,""
"3952",1,""
"3953",NA,""
"3954",6,"Works usually really well."
"3955",NA,""
"3956",6,""
"3957",5,""
"3958",7,"Perl makes that extraordinarily easy, but it's not a big requirement in my work."
"3959",NA,""
"3960",NA,""
"3961",NA,""
"3962",3,""
"3963",5,""
"3964",6,"I'm a sysadmin with serveral unix/Linux flavours and different versions of perl. So one script running on several platforms is essential."
"3965",6,"Some parts (system, exec, fork, filesystem handling) are not as portable as others.  CGI works well cross-platform though."
"3966",6,""
"3967",6,"The vast majority of the time it ""just works"".  One of the great strengths of Perl."
"3968",NA,""
"3969",3,"Native bindings are the main issue. It will always break things."
"3970",6,"this is the way to go and it's great that perl has a long and successful track record on it."
"3971",5,"Not much experience there."
"3972",6,"Finding how to detect and make appropriate adjustments was a bit of a struggle, but after that, no biggie"
"3973",7,"Well, it works great in the nix family.  I've never done much with Windows.  I wish I could hook into Mac OS X's Cocoa api."
"3974",NA,""
"3975",6,"Adam Kennedy deserves a medal for his efforts on Windows.  Not that I use it, but I like knowing that other people can run my programs on Windows."
"3976",6,""
"3977",NA,""
"3978",NA,""
"3979",1,""
"3980",1,""
"3981",6,"We're doing a good job of a painful problem."
"3982",6,""
"3983",NA,""
"3984",1,""
"3985",NA,""
"3986",NA,""
"3987",NA,""
"3988",NA,""
"3989",5,""
"3990",5,""
"3991",1,"shebang line differences and using it in the script makes it inconvenient developing web apps in Windows env, for Linux env."
"3992",6,""
"3993",NA,""
"3994",6,""
"3995",NA,""
"3996",NA,""
"3997",1,""
"3998",7,"It's a breeze but I only use UNIX-like platforms."
"3999",6,"The only exception tends to be windows which usually lacks the DLLs for the open source libraries which are often components of more complex Perl modules."
"4000",3,"It sometimes needs too much thinking before start programming; but this is not the fault of perl ..."
"4001",NA,""
"4002",5,""
"4003",NA,""
"4004",6,"For what I do with Perl, it's pretty easy."
"4005",5,""
"4006",NA,""
"4007",1,""
"4008",5,""
"4009",6,""
"4010",6,""
"4011",6,""
"4012",NA,""
"4013",1,""
"4014",7,""
"4015",6,""
"4016",7,""
"4017",5,""
"4018",6,"The windows situation is a mess. "
"4019",NA,""
"4020",6,""
"4021",4,""
"4022",NA,""
"4023",3,""
"4024",6,"C integration could be easier..."
"4025",5,""
"4026",NA,""
"4027",1,""
"4028",4,""
"4029",NA,""
"4030",1,""
"4031",NA,""
"4032",6,""
"4033",NA,""
"4034",NA,""
"4035",NA,""
"4036",1,""
"4037",1,""
"4038",5,"The weak point is in packaging and delivering dependencies.  End-users should not install from the CPAN."
"4039",1,""
"4040",NA,""
"4041",4,""
"4042",1,""
"4043",NA,""
"4044",6,""
"4045",5,"External library compilation in Windows is often hard, making a lot of XS modules that rely on them un-installable on Windows."
"4046",1,""
"4047",6,""
"4048",6,"maintaining multiple Perl library installations is a PITA."
"4049",6,""
"4050",NA,"My division recommends Perl for portable scripting."
"4051",6,"Have done little Windows Perl programming only because I try to avoid Windows.[CR]If I *had* to use Windows, I'd use Perl there for almost everything."
"4052",6,""
"4053",3,""
"4054",5,""
"4055",6,""
"4056",NA,""
"4057",6,""
"4058",3,""
"4059",5,""
"4060",5,""
"4061",NA,""
"4062",4,""
"4063",NA,""
"4064",5,"I haven't done much cross platform programming.  I moved to linux 10+ years ago because I felt like a second class citizen programming perl on windows."
"4065",1,""
"4066",6,"It works well provided a technically-inclined person deploys the application. It's difficult to create a prereq set across all the platforms."
"4067",6,""
"4068",4,"perlbrew will help us to do it."
"4069",1,""
"4070",3,""
"4071",NA,""
"4072",1,""
"4073",7,""
"4074",NA,""
"4075",5,""
"4076",NA,""
"4077",3,"The real problem with cross platform perl programming for me is with Windows.  There are three decent ports, but each have significant failings:[CR]* cygwin and stawberry are unix like out of the box, but applications developed there are difficult to deploy to machines without a perl interpreter already installed.[CR]* ActiveState has a useful tool for generating .exe files from a perl script which works without much effort on most windows boxes, and provides a number of pre-built CPAN modules, though not enough and frequently not the latest versions."
"4078",NA,""
"4079",NA,""
"4080",5,""
"4081",4,""
"4082",7,""
"4083",1,"Only use linux"
"4084",5,""
"4085",6,""
"4086",NA,""
"4087",NA,""
"4088",1,""
"4089",2,"It's even worse than regular perl programming!"
"4090",1,""
"4091",6,""
"4092",NA,""
"4093",6,"easy might not be the right word. ""easier"" would be the best way to put it. "
"4094",6,""
"4095",6,""
"4096",6,""
"4097",5,"unfortunately windows support is a bit bad.[CR]Powershell looks partiall more promising for Windows"
"4098",5,""
"4099",6,""
"4100",1,""
"4101",1,""
"4102",NA,""
"4103",7,""
"4104",6,""
"4105",6,""
"4106",NA,""
"4107",NA,""
"4108",6,""
"4109",6,""
"4110",4,"Modules are often not cross platform compatible"
"4111",6,"Pure Perl is the best route to take for cross-platform programming...  When necessary, make sure your C/XS is as portable as possible."
"4112",6,""
"4113",5,""
"4114",6,""
"4115",5,"Having a native Perl interpreter within Windows would be nice."
"4116",4,"There is a complication for some XS-modules on Windows even with Strawberry Perl"
"4117",NA,""
"4118",6,""
"4119",NA,""
"4120",7,"more modules included in base distributions"
"4121",1,""
"4122",6,""
"4123",1,""
"4124",7,""
"4125",6,""
"4126",6,"Programming Perl to run across different platform is usually easy. Sometime I might run into rough corners where some CPAN module or its dependency is using XS and I have to compile it myself(More of a problem on Windows) I use ActivePerl on windows and try and restrict my module usage to the set of available modules on their ppm repository."
"4127",4,"it works amazingly well between linux/solaris/hp-ux"
"4128",NA,""
"4129",6,"Never had any problems. I'm a grown-up adult and thus know what I'm doing. Sometimes. "
"4130",3,"Rarely seem to have success. Would personally prefer that Perl concentrate on its Unix roots."
"4131",1,"never tried, I program Perl on Linux und those scripts do run under Linux only. Additionally I have to use some Perl-scripts under windows which is not a nice thing"
"4132",6,""
"4133",6,""
"4134",7,"It's relatively easy to write cross-platform Perl, with a little care."
"4135",6,""
"4136",NA,""
"4137",7,""
"4138",7,"Easy enough"
"4139",NA,""
"4140",3,"Windows has always been a second class Perl platform.  Strawberry Perl may be changing that.  Thank God."
"4141",NA,""
"4142",5,""
"4143",7,""
"4144",NA,""
"4145",NA,""
"4146",6,"Perl has many tools that make cross-platform programming easier, when they are used (File::Spec, Path::Class, File::HomeDir, etc), and perlport is a great source of information of what to do and not to do."
"4147",6,"Between Linux and Solaris, easy. Between Unix and windows, much less so"
"4148",NA,""
"4149",7,""
"4150",NA,""
"4151",NA,""
"4152",7,""
"4153",7,"easier than breathing"
"4154",NA,""
"4155",NA,""
"4156",6,"Windows is the main problem."
"4157",6,""
"4158",NA,""
"4159",6,""
"4160",1,""
"4161",1,""
"4162",5,"The only thing that's an issue is running perl in cygwin because of issues with paths."
"4163",NA,""
"4164",6,""
"4165",1,""
"4166",NA,""
"4167",1,""
"4168",6,""
"4169",6,"I do simple things, this time-savers,[CR]but this works great. Surprise"
"4170",6,"As long as I have the right modules, it works like a charm."
"4171",4,"The lack of a built in standard for dealing with files, sysopen ties directly to unix's open for instance, allows easy cross platform incompatibility by lesser experienced developers."
"4172",7,""
"4173",3,"i used to have many system commands and bash-tricks in many perl-scripts.[CR]It would nearly never work on a windows machine. try to get wget and mysql running on windows with identical commands in perl?"
"4174",6,""
"4175",5,""
"4176",NA,""
"4177",NA,""
"4178",NA,""
"4179",3,"tried it briefly with windows, was too painful to continue."
"4180",4,""
"4181",NA,""
"4182",1,""
"4183",1,""
"4184",NA,""
"4185",4,"It seems to be pretty good at this point. However, I don't do any GUI operations with Perl."
"4186",NA,""
"4187",NA,""
"4188",1,""
"4189",6,""
"4190",5,""
"4191",6,""
"4192",NA,""
"4193",3,"Sometimes getting modules on all platforms can be a real chore"
"4194",6,""
"4195",6,"All the code ive written has 'just worked'"
"4196",7,"CPAN is one of the best things that has ever happened to programming."
"4197",3,""
"4198",5,""
"4199",7,""
"4200",5,"Perl is a VM and for the most part has done a good job of making cross platform programming easy.  The devil is in the details."
"4201",6,""
"4202",1,""
"4203",7,""
"4204",5,""
"4205",5,"Portability (especially of some CPAN modules) could be improved, but the ability to directly use system calls is of the same importance, so the current state of Perl programs portability in general is more than acceptable."
"4206",6,""
"4207",NA,""
"4208",1,"it sucks, it stops me from chossing perl if I need advanced features."
"4209",6,"Cygwin goes a long way toward smoothing Unix -> Windows porting."
"4210",1,""
"4211",NA,""
"4212",6,"I wish it worked better on VAX/VMS."
"4213",NA,""
"4214",6,""
"4215",5,""
"4216",NA,""
"4217",6,""
"4218",6,""
"4219",NA,""
"4220",2,""
"4221",NA,""
"4222",3,""
"4223",7,"It takes some effort, but it's worthwhile."
"4224",6,""
"4225",5,""
"4226",NA,""
"4227",NA,""
"4228",5,"There should be some sort of quality indicator for CPAN modules saying: runs (with all dependencys) on at least Linux, Windows (and perhaps Mac)."
"4229",5,""
"4230",NA,""
"4231",NA,""
"4232",5,""
"4233",3,""
"4234",5,""
"4235",NA,""
"4236",NA,""
"4237",7,""
"4238",7,""
"4239",5,"installing Perl modules that require compilations is not easy. "
"4240",6,""
"4241",1,"Don't do it"
"4242",6,"Much easier than Java!"
"4243",6,""
"4244",6,"As long as Perl is used for the code, it's portable.  It's when developers use the exec(), system() or backticks that bites."
"4245",7,""
"4246",5,""
"4247",5,""
"4248",6,""
"4249",5,"Not very problematic at all.  Once was, has become much less so."
"4250",6,""
"4251",5,""
"4252",NA,""
"4253",5,""
"4254",7,"Good enough"
"4255",NA,""
"4256",NA,""
"4257",NA,""
"4258",6,"I've seen the same perl code run on everything from embedded boards to big ass mainframes. nuff said."
"4259",5,""
"4260",3,""
"4261",NA,""
"4262",NA,""
"4263",1,""
"4264",NA,""
"4265",NA,""
"4266",6,""
"4267",NA,""
"4268",6,"Thankfully i don't have to do that right now."
"4269",NA,""
"4270",5,""
"4271",NA,""
"4272",NA,""
"4273",5,""
"4274",5,""
"4275",1,""
"4276",NA,""
"4277",4,""
"4278",6,""
"4279",NA,""
"4280",NA,""
"4281",NA,""
"4282",1,""
"4283",3,""
"4284",NA,""
"4285",7,"Very important"
"4286",NA,""
"4287",NA,""
"4288",6,"Discipline!"
"4289",6,"Cross platform, Linux, Tru64, MacOSX etc, always been fine in the main. Never use the system binary and you'll be OK."
"4290",1,""
"4291",5,""
"4292",7,""
"4293",NA,""
"4294",NA,""
"4295",6,""
"4296",3,""
"4297",5,""
"4298",NA,""
"4299",4,""
"4300",5,""
"4301",6,"Mostly if you don't do anything stupid, it will work."
"4302",6,""
"4303",NA,""
"4304",1,""
"4305",6,"We need something better than XS for interfacing with C libraries."
"4306",NA,""
"4307",NA,""
"4308",1,"I like that, most of the time a script I write on solaris will work the same on windows."
"4309",NA,""
"4310",NA,""
"4311",NA,""
"4312",7,""
"4313",3,""
"4314",5,""
"4315",NA,""
"4316",NA,""
"4317",5,""
"4318",3,""
"4319",NA,""
"4320",6,"Issues are related to missing cross-platform considerations on some modules, which are usually not very hard to solve (when possible)"
"4321",6,""
"4322",NA,""
"4323",6,""
"4324",NA,""
"4325",5,"needs better filename handling"
"4326",6,"Wondering if there will ever be a version that runs on s60"
"4327",5,"Usually (coding on Windows to run on Solaris) it just works and that's brilliant - when ppm/CPAN installation doesn't just work, I have had very little success forcing things or trying to install them manually, and normally end up resorting to a rewrite to avoid the problematic module - for this reason (and also the main Solaris sysadmin's suspicion of installing too many unknown modules :) I try to keep the number of modules required to a minimum and stick to well-known core modules, or at least ones already in place on the server"
"4328",5,"it's all fun and games until the GUI gets involved..."
"4329",6,""
"4330",NA,""
"4331",1,""
"4332",NA,""
"4333",NA,""
"4334",NA,""
"4335",6,""
"4336",5,""
"4337",1,""
"4338",NA,""
"4339",5,""
"4340",NA,""
"4341",6,""
"4342",4,""
"4343",NA,""
"4344",1,""
"4345",5,""
"4346",NA,""
"4347",5,""
"4348",5,""
"4349",1,""
"4350",4,""
"4351",5,""
"4352",NA,""
"4353",3,""
"4354",NA,""
"4355",5,""
"4356",NA,""
"4357",NA,""
"4358",7,""
"4359",1,""
"4360",NA,""
"4361",4,""
"4362",5,""
"4363",NA,""
"4364",6,"It works with VMS, but have file size problems. [CR]The Salary survey question was ducked. "
"4365",1,"Only worked with Perl on Unixes and Unix-like operating systems."
"4366",6,""
"4367",6,""
"4368",1,""
"4369",NA,""
"4370",3,"it's hard to bundle everything"
"4371",5,"windows sucks. No default compiler tool chain or something else. Strawberry Perl does a lot that this is better with shipping some important modules already pre-compiled. But it is still a pain to use some other XS modules. And in generally because Windows does everything a little bit other then any other existsing operationg system."
"4372",6,"I rarely use windows.  Strawberry Perl seems good, but is still much different than linux/unix"
"4373",3,"For a big project, getting all the dependencies installed is just hard, even when moving between with similar systems (from debian to ubuntu, etc..)."
"4374",3,""
"4375",1,""
"4376",5,""
"4377",4,""
"4378",6,""
"4379",3,""
"4380",NA,""
"4381",5,""
"4382",6,""
"4383",NA,""
"4384",6,""
"4385",5,"Haven't really tried Windows. Works well across *NIXes"
"4386",4,"Too many modules don't consider the ActiveState platform."
"4387",5,""
"4388",NA,""
"4389",NA,""
"4390",NA,""
"4391",6,"I don't care about Windows..."
"4392",4,""
"4393",1,""
"4394",NA,""
"4395",NA,""
"4396",6,""
"4397",5,""
"4398",6,""
"4399",6,""
"4400",1,""
"4401",4,""
"4402",5,""
"4403",6,""
"4404",NA,""
"4405",6,""
"4406",6,""
"4407",NA,""
"4408",NA,""
"4409",6,"newlines/carriage returns are annoying"
"4410",NA,""
"4411",1,""
"4412",4,"Hey, it's a pain in the ass to do local editing and checking of programs that use modules that aren't installed locally. Like, you can't even syntax check a script that uses a module that's not installed on the editing platform."
"4413",NA,""
"4414",NA,""
"4415",5,""
"4416",NA,""
"4417",5,""
"4418",5,""
"4419",4,""
"4420",1,"none"
"4421",1,""
"4422",6,""
"4423",1,""
"4424",NA,""
"4425",NA,""
"4426",5,""
"4427",3,"Most parts are easy, things get ugly only when interacting closely with the OS and the shell."
"4428",4,""
"4429",NA,""
"4430",NA,""
"4431",4,""
"4432",NA,""
"4433",NA,""
"4434",NA,""
"4435",7,"Pretty simple once you get your head around portability issues..."
"4436",1,"Using ppm instead"
"4437",5,"I only use perl in POSIX environments, a lot of times against GNU libs..  I've never written perl for Windows."
"4438",NA,""
"4439",5,"Haven't needed to do much. Have had trouble getting some perl apps to run on OS X, but I didn't write them."
"4440",2,"As soon as you leave realm of Perl and start prodding environment it all falls to the hell."
"4441",4,"Not all modules are meant to be used on all platforms, so it's expected for some to just not be able to work everywhere."
"4442",1,""
"4443",5,""
"4444",6,""
"4445",6,""
"4446",NA,""
"4447",7,""
"4448",6,"It's definitely appealing, but I don't often need it.  Maybe PAR::Packer will change my mind."
"4449",7,"It is very well adapted. Use of manual editors help a lot than other editors meant for a particular platform."
"4450",6,"N/A"
"4451",NA,""
"4452",5,""
"4453",NA,""
"4454",NA,""
"4455",3,""
"4456",NA,""
"4457",NA,""
"4458",6,""
"4459",NA,""
"4460",6,""
"4461",1,""
"4462",3,""
"4463",NA,""
"4464",5,"I pity people trying to use perl on Windows, but only because I pity people trying to do anything on Windows. (I have no direct experience doing perl coding for windows.)[CR][CR]I don't really consider it any kind of challenge to deploy Perl code written on OS X on Linux; OS X is UNIX, and Linux is Unix-like, so it's not really cross-platform development."
"4465",NA,""
"4466",1,""
"4467",4,"windows is a bit hard for programmers"
"4468",3,"cygwin can be very annoying sometimes!"
"4469",NA,""
"4470",6,""
"4471",1,""
"4472",NA,""
"4473",NA,""
"4474",5,"most difficult is related tools (mysql,...)"
"4475",1,""
"4476",6,"it usually works"
"4477",5,""
"4478",5,""
"4479",6,""
"4480",6,""
"4481",6,"I would say it is mostly similar to other programming languages"
"4482",6,""
"4483",1,""
"4484",3,""
"4485",5,""
"4486",NA,""
"4487",4,""
"4488",NA,""
"4489",1,""
"4490",5,""
"4491",NA,""
"4492",NA,""
"4493",NA,""
"4494",2,""
"4495",NA,""
"4496",NA,""
"4497",1,""
"4498",5,""
"4499",NA,""
"4500",NA,""
"4501",NA,""
"4502",NA,""
"4503",NA,""
"4504",3,"I don't."
"4505",1,""
"4506",4,""
"4507",4,""
"4508",NA,""
"4509",7,"It is as easy as Java is, but Perl programmes seem to run faster than Java."
"4510",NA,""
"4511",6,""
"4512",NA,""
"4513",6,""
"4514",NA,""
"4515",NA,""
"4516",1,""
"4517",1,""
"4518",NA,""
"4519",NA,""
"4520",NA,""
"4521",1,""
"4522",5,""
"4523",6,""
"4524",5,"Sometimes problematic, generally easier on linux than windows especially when there are compiled dependencies"
"4525",NA,""
"4526",NA,""
"4527",5,""
"4528",5,""
"4529",1,""
"4530",1,""
"4531",6,""
"4532",NA,""
"4533",5,""
"4534",6,"No"
"4535",4,""
"4536",NA,""
"4537",6,""
"4538",6,""
"4539",NA,""
"4540",6,""
"4541",1,""
"4542",NA,""
"4543",4,"Community support for windows is sparse."
"4544",6,"No issues..."
"4545",NA,""
"4546",NA,""
"4547",NA,""
"4548",NA,""
"4549",6,""
"4550",NA,""
"4551",6,""
"4552",NA,""
"4553",5,""
"4554",6,""
"4555",1,""
"4556",1,""
"4557",6,""
"4558",4,""
"4559",NA,""
"4560",4,""
"4561",7,""
"4562",6,"I never use/test on windows"
"4563",NA,""
"4564",5,""
"4565",NA,""
"4566",1,""
"4567",3,"""Second-hand"" cross-platform issues are my biggest barrier (i.e. when the cross-platform issue is really cause by my dependencies: CPAN modules, CPAN module tests, or ""external"" programs such as MySQL)."
"4568",NA,""
"4569",1,""
"4570",NA,""
"4571",1,""
"4572",5,""
"4573",7,""
"4574",NA,""
"4575",5,""
"4576",NA,""
"4577",5,"this is not a perl-program but how forking is (can be!) done running on windows is unfortunately not the same as one unix. obvious. it's not perl's fault. "
"4578",1,"actually I only use linux"
"4579",6,""
"4580",4,"Perl has much to do fixing incomplete POSIX implementations it seems."
"4581",1,""
"4582",1,"Never done that."
"4583",5,""
"4584",NA,""
"4585",NA,""
"4586",NA,""
"4587",NA,""
"4588",6,""
"4589",5,""
"4590",6,"It works very well, even if newlines don't :-)"
"4591",NA,""
"4592",6,""
"4593",NA,""
"4594",NA,""
"4595",6,""
"4596",1,""
"4597",1,""
"4598",3,"path separators mike life unpleasant.  CPAN modules help mitigate this,thankfully."
"4599",5,""
"4600",NA,""
"4601",NA,""
"4602",6,""
"4603",NA,""
"4604",5,""
"4605",NA,""
"4606",6,""
"4607",7,""
"4608",6,""
"4609",7,"The primary problem is C dependencies. A lesser problem is distributions that don't state all their dependencies (e.g. assuming DBI to always be present) and fail on install for fresh systems âÄî I think there could be a drive to improve this across CPAN."
"4610",1,"I don't do cross platform Perl programming. "
"4611",3,"It's trickier than one would except."
"4612",NA,""
"4613",1,""
"4614",5,""
"4615",NA,""
"4616",NA,""
"4617",3,"wish there were more platforms to cross to.  windows/mac/*nix pseudo-troika is hurting the whole world.  "
"4618",1,"only every use Unix and perl."
"4619",6,""
"4620",NA,""
"4621",NA,""
"4622",1,"I don't often do it."
"4623",NA,""
"4624",5,""
"4625",5,""
"4626",3,""
"4627",5,""
"4628",4,""
"4629",6,""
"4630",5,"It's mostly good, and StrawberryPerl is a blessing for module quality on Win32. Still, there are much issues, if you do more then writing simple scripts. For instance modules like Net::LibIDN (which is one of the requirements if you want to talk to MS Exchange over SMTP if they require authentication) does not really work well. [CR][CR]Also, it kind of sucks that there is no GREAT solution to run Perl on a webserver on Windows; mod_perl and mod_ssl in combination don't work, mod_perl and Strawberry does not work (only with Activestate because of compiler incompatibilities), finding out how to run FastCGI on IIS is tedious to say the least, well, you know."
"4631",NA,""
"4632",7,"I always go with Unix + Win32 + Mac fully cross platform modules unless there is no other possible way to solve the problem (and it's a private program)"
"4633",5,"Many people don't think about portability and have very little knowledge of good CPAN modules. I had many scripts who where simply parsing filenames themselves making it not easily portable to e.g. Windows platform. "
"4634",1,""
"4635",NA,""
"4636",1,""
"4637",NA,""
"4638",6,""
"4639",6,""
"4640",4,""
"4641",NA,""
"4642",6,""
"4643",6,""
"4644",NA,""
"4645",6,""
"4646",4,""
"4647",NA,""
"4648",NA,""
"4649",6,""
"4650",6,"Shebang line gets confused if linebreaks are \r\n on Unix, but that's not perl's problem.  No other issues."
"4651",NA,""
"4652",4,"Non-unix (ie Windows) not always supported."
"4653",4,"Once windows enters the mix, all bets are off."
"4654",7,"No."
"4655",5,""
"4656",6,""
"4657",6,""
"4658",6,""
"4659",7,"Perl works well on all the platoforms I use. One of the really strong points of Perl."
"4660",7,""
"4661",6,"Works beautifully between Linux/Ubuntu and Unix/Solaris, but those two platforms are fairly close."
"4662",2,"XS sucks"
"4663",NA,""
"4664",5,"Windows unique characteristics destroy most cross platform capabilities"
"4665",NA,""
"4666",6,""
"4667",7,"Cross platform perl programming is easy and quite reliable"
"4668",NA,""
"4669",NA,""
"4670",3,""
"4671",3,"I know nothing about running Perl on Windows.  The fact that Perl is mostly known as a UNIX and Mac tool is a big problem for its wider distribution.  I only use UNIX and Mac, so I don't mind this restriction."
"4672",NA,""
"4673",1,""
"4674",NA,""
"4675",NA,""
"4676",5,"In my case the problems often come from non portability of CPAN modules I use."
"4677",NA,""
"4678",6,""
"4679",1,""
"4680",5,"Most perl modules are platform specific and therefore non-portable. Other than that, perl is nearly 100% portable."
"4681",NA,""
"4682",3,"Core features like PIPES, Process & Thread & Signals handling is NOT really portable (no identical behavior or feature not available (esp. under Win_XX)[CR]GUI-pacakges like Tk also do not always behave identical"
"4683",5,""
"4684",1,"I only do stuff for Apache on Linux..."
"4685",6,"Binmode difference is a gotcha but well documented, but threads and the differences in how they act on Windows compared to Linux can be painful."
"4686",1,""
"4687",NA,""
"4688",5,"Be aware up front and test often."
"4689",6,"Don't have much need for it. I most often test my scripts on Ubuntu and run them on Debian."
"4690",NA,""
"4691",1,""
"4692",7,"Fork and other unix system calls are always a problem."
"4693",5,""
"4694",NA,""
"4695",1,"I have not experience in this area."
"4696",5,""
"4697",6,""
"4698",6,""
"4699",6,""
"4700",NA,""
"4701",7,"Works best when using pure perl cpan modules, since platform support for non-unix platform (windows, vms in my case) depends on the availability of the interpreter and c-modules. On windows it is becoming better and better because of strawberry perl, but it is still painful, if you are not a c-programmer."
"4702",6,""
"4703",NA,""
"4704",NA,""
"4705",5,""
"4706",1,""
"4707",5,"When working on Windows, I really wish all the world *were* a UNIX"
"4708",NA,""
"4709",NA,""
"4710",2,""
"4711",6,""
"4712",4,"Perl is powerful cross-platform application development!"
"4713",6,""
"4714",3,""
"4715",7,""
"4716",NA,""
"4717",NA,""
"4718",5,"my experience is limited to 64-Bit POSIX (Linux, Solaris), but there I never had any trouble"
"4719",4,"Portability depends on used CPAN modules."
"4720",5,"Cross platform has generally worked fairly well. The biggest problem that I've found in my development with perl is that systems administrators hardly EVER update perl on any server I am working on. Usually this is out of my control. "
"4721",7,""
"4722",5,""
"4723",NA,""
"4724",5,""
"4725",NA,""
"4726",NA,""
"4727",5,"I worked with strawberry perl and was amazed how much better is it then active-state"
"4728",NA,""
"4729",NA,""
"4730",NA,""
"4731",6,"It's easy to avoid platform-specific things."
"4732",5,""
"4733",4,"Paths are still a problem"
"4734",5,""
"4735",5,""
"4736",6,"Only Windows stands out to me as a problem, but I almost never use perl+Windows in production so it's not really an issue for me."
"4737",3,"It isn't as good as it could be - admittedly this is because other languages use virtual machines, but built-in functions like alarm() and signals should work in the same way across different platforms."
"4738",5,"Have no experience."
"4739",NA,""
"4740",NA,""
"4741",7,"It goes fine."
"4742",3,"lack of modules in the default install under other unix."
"4743",6,""
"4744",6,""
"4745",1,""
"4746",5,""
"4747",1,""
"4748",6,"Windows newlines pft"
"4749",6,""
"4750",4,""
"4751",6,""
"4752",NA,""
"4753",6,"Cross-platform seems to be Perl's strong point. "
"4754",6,""
"4755",NA,""
"4756",6,""
"4757",NA,""
"4758",6,"strawberry perl has made this much better"
"4759",1,""
"4760",NA,""
"4761",5,""
"4762",NA,""
"4763",2,"Its hard to install modules on windows; needs Internet to install modules which I don't like. I want it to be just downloaded and store it for future use."
"4764",1,""
"4765",5,""
"4766",NA,""
"4767",5,""
"4768",1,""
"4769",5,"It doesn't really apply to me very much. Although I have a Windows workstation I rarely bother actually running Perl (or any development code) on it, I save that for servers or VMs."
"4770",1,""
"4771",6,"When you take care of paths it's not that hard for what I do."
"4772",NA,""
"4773",NA,""
"4774",NA,""
"4775",2,"hahaha takes a lot of care, getting better with strawberry"
"4776",6,"it rock's that perl is everywhere"
"4777",6,""
"4778",NA,""
"4779",6,""
"4780",NA,""
"4781",7,""
"4782",6,""
"4783",NA,""
"4784",NA,""
"4785",7,"Pure Perl code + modules is a lot easier to port to Windows than modules with C code. I rely on Activestate ppm for mixed modules."
"4786",3,""
"4787",NA,""
"4788",6,""
"4789",4,""
"4790",4,"It could be easier... specially distribution of packaged programs/modules in a cross distributable way."
"4791",6,""
"4792",6,""
"4793",4,"Some functionnalities don't work on windows and the need of a compiling environnement (all platfroms) is a big problem."
"4794",1,""
"4795",NA,""
"4796",5,""
"4797",6,""
"4798",6,""
"4799",NA,""
"4800",5,""
"4801",6,""
"4802",NA,""
"4803",7,""
"4804",NA,""
"4805",1,""
"4806",7,""
"4807",NA,""
"4808",6,""
"4809",NA,""
"4810",NA,""
"4811",5,"Very important to Perl's health!"
"4812",NA,""
"4813",3,""
"4814",NA,""
"4815",6,"It's a bit annoying using Perl on Mac OS X, because the version that ships is good, but then they go and update it on you and things break.[CR][CR]DBD / DBI MySQL on OS X has been a nightmare to get working for like 3 OS X revision, I can't see why this should be so difficult."
"4816",1,""
"4817",NA,""
"4818",NA,""
"4819",6,"Not hard at all.  A few of my projects were cross-platform.  Reducing dependencies helps."
"4820",1,""
"4821",NA,""
"4822",4,""
"4823",1,""
"4824",NA,""
"4825",4,""
"4826",NA,""
"4827",1,""
"4828",6,"Not many. The documentation for perlport is certainly a good resource."
"4829",NA,""
"4830",6,"No problem."
"4831",4,"Different underlying build environments can make CPAN installations not work across all platforms the same way."
"4832",NA,""
"4833",7,""
"4834",NA,""
"4835",NA,""
"4836",7,"Windows sucks ;-).  Else is working smooth!"
"4837",6,"It requires a bit of forethought. I started programming Perl on VMS, moved to MS Windows and then *nix (Linus & Solaris). I've maintained programs that ran on all three platforms without modification."
"4838",NA,""
"4839",1,""
"4840",4,""
"4841",5,"++ very good if you stick to the core distribution, never had problems with that[CR]-- gets annoying with addition of other modules (ppm, CPAN-shell, par... djungle of options). usual problems with compiling on windows (cygwin, gcc, ?).  Again: ruby approach better, one integrated install mechanism (rubygems)"
"4842",NA,""
"4843",5,""
"4844",NA,""
"4845",NA,""
